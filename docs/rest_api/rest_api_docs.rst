REST API
========

The Application Programming Interface (API) allows users to access data
in their Organizations and Communities with REST-ful queries to HTTP
endpoints.

.. note:: We are in the process of updating the API documentation to make it (1) easier for you to use and (2) more up to date. We apologize for any inconvenience in the mean time.

Creating an API Key
-------------------

To create an API User please refer to the `Creating User Accounts KB
article <http://kb.threatconnect.com/customer/en/portal/articles/2188549-creating-user-accounts>`__.

If you are not able to create an API key using instructions provided in
the KB article above, please contact sales@threatconnect.com to discuss
pricing.

Using the API
-------------

The public ThreatConnect API is accessible at ``https://api.threatconnect.com/``.

.. note:: If you are working with the ThreatConnect **sandbox**, the api path is: ``https://sandbox.threatconnect.com/api/``.

Requests to ThreatConnect API endpoints must be made over HTTPS with a valid Signature, or a 403 error will be returned.

.. note:: ThreatConnect Dedicated Cloud and On-Premise users will need to contact their System Administrator for the correct API URL.

The example below details the path of a version 2 request to the Groups
Service and Incidents-Collections Resource:

.. code::

    /v2/groups/incidents

Each API response is formatted with a status. If the status is
"Success," each response includes a data field with the appropriate
response type. If the status is "Failure," an appropriate error message
is provided as to why the request failed. Available resources, request
parameters, and example responses are located in the Services and
Resources section of the document.

The API will be versioned as needed to support continued development of
the ThreatConnect platform, and existing API versions will be
appropriately deprecated.

Version 2 (V2) of the API supports write capabilities via HTTP POST and
PUT methods the HTTP GET method is used for read access to resources.

Authentication
--------------

Passing a Signature to the API

.. code::

    GET https://api.threatconnect.com/v2/indicators?owner=Common%20Community HTTP/1.1
     Timestamp: 1386658343
    Authorization: TC 12345678901234567890: ljU65Zj30ueGL5y9oI01yW9cdfIllew0atg9D59yBXM =
     Host: api.threatconnect.com

Each request requires a valid Authorization header in the format
``TC $API_ID:$SIGNATURE``

A Timestamp nonce in Unix epoch time must also be included (generated by
``date +'%s'``)

The Signature is created by concatenating the URL, HTTP method, and
Timestamp as in:

``/v2/indicators/hosts/google.com?Owner=Common%20Community:GET:1381126486``

The result is then signed with the user's ``Secret Key`` using SHA256 as
an HMAC as in `this
code <https://github.com/ThreatConnect-Inc/threatconnect-python/blob/master/threatconnect/ThreatConnect.py#L135>`__

.. note:: If the nonce is not within five minutes of the ThreatConnect server's system time, a 403 error will be returned.

Example API GET Request
-----------------------

Get a list of all Owners visible to this user:

.. code::

    GET /v2/owners

JSON Response:

.. code:: json

    {
      "status": "Success",
      "data": {
        "resultCount": 2,
        "owner": [
          {
            "id": 0,
            "name": "Exemplary Organization",
            "type": "Organization"
          },
          {
            "id": 1,
            "name": "Common Community",
            "type": "Community"
          },
        ]
      }
    }

XML Response:

.. code:: xml

    <ownersResponse>
     <Status>Success</Status>
     <Data xsi:type="ownerListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Owner xsi:type="organization">
       <Id>1</Id>
       <Name>System</Name>
       <Type>Organization</Type>
      </Owner>
      <Owner xsi:type="community">
       <Id>26</Id>
       <Name>Common Community</Name>
       <Type>Community</Type>
      </Owner>
     </Data>
    </ownersResponse>

Clients should start with a request to the Owners service to return all
Organizations and Communities to which the API credentials have access.
This basic request is not dependent on data or Community permissions,
but it is required that the request meets the Authentication
requirements.

Services and Resources
----------------------

The example below denotes the HTTP path of a request to the Groups
Service and an Incidents-Collections Resource:

.. code::

    /v2/groups/incidents

The example below is of a path that will return a specific Incident with
an ID of 1:

.. code::

    /v2/groups/incidents/1

The example below is of a path will return a specific Host:

.. code::

    /v2/indicators/hosts/example.com

The example below displays the path to which a request must be sent in
order to obtain the associated Incidents of the above Host:

.. code::

    /v2/indicators/hosts/example.com/groups/incidents

This path returns all Incidents within the user’s Organization.

.. code::

    /v2/groups/incidents

The second path will return only Incidents associated to a specific Host
with a value of example.com:

.. code::

    /v2/indicators/hosts/example.com/groups/incidents

Each ThreatConnect API Service and Resource is defined by the HTTP path
of the request. To request a specific Resource from a Collection, append
the appropriate identifier to the path. The API supports "pivoting" much
like the ThreatConnect platform. Because the API supports pivoting and
relationships, different request paths can return the same Resource
Type, although limited in scope. Refer to `Resource
Types <#resource-types>`__ for supported resources and retrieval paths.

The Response

Each API response includes a status. If the status is "Success," each
response includes a data field with the appropriate response type. If
the Status is "Failure," an appropriate error message is provided as to
why the request failed.

By default, the API responds with a JSON-formatted message for each
Resource request. If an XML-formatted response is desired, an HTTP
Accept Header with a value of "application/xml" can be sent with the
request.

Complete List of Services and Resources
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Owners
^^^^^^

* ``/v2/owners``
* ``/v2/owners/mine``
* ``/v2/owners/metrics``
* ``/v2/owners/{id}/metrics``

Groups
^^^^^^

* ``/v2/groups``
* ``/v2/groups/{type}``
* ``/v2/groups/{type}/{id}``
* ``/v2/groups/{type}/{id}/attributes``
* ``/v2/groups/{type}/{id}/attributes/{attributeId}``
* ``/v2/groups/{type}/{id}/attributes/{attributeId}/securityLabels``
* ``/v2/groups/{type}/{id}/attributes/{attributeId}/securityLabels/{securityLabel}``
* ``/v2/groups/{type}/{id}/groups``
* ``/v2/groups/{type}/{id}/groups/adversaries``
* ``/v2/groups/{type}/{id}/groups/adversaries/{groupId}``
* ``/v2/groups/{type}/{id}/groups/documents``
* ``/v2/groups/{type}/{id}/groups/documents/{groupId}``
* ``/v2/groups/{type}/{id}/groups/emails``
* ``/v2/groups/{type}/{id}/groups/emails/{groupId}``
* ``/v2/groups/{type}/{id}/groups/incidents``
* ``/v2/groups/{type}/{id}/groups/incidents/{groupId}``
* ``/v2/groups/{type}/{id}/groups/signatures``
* ``/v2/groups/{type}/{id}/groups/signatures/{groupId}``
* ``/v2/groups/{type}/{id}/groups/threats``
* ``/v2/groups/{type}/{id}/groups/threats/{groupId}``
* ``/v2/groups/{type}/{id}/indicators``
* ``/v2/groups/{type}/{id}/indicators/addresses``
* ``/v2/groups/{type}/{id}/indicators/addresses/{indicatorId}``
* ``/v2/groups/{type}/{id}/indicators/emailAddresses``
* ``/v2/groups/{type}/{id}/indicators/emailAddresses/{indicatorId}``
* ``/v2/groups/{type}/{id}/indicators/{type}/{indicatorId}``
* ``/v2/groups/{type}/{id}/indicators/files``
* ``/v2/groups/{type}/{id}/indicators/files/{indicatorId}``
* ``/v2/groups/{type}/{id}/indicators/hosts``
* ``/v2/groups/{type}/{id}/indicators/hosts/{indicatorId}``
* ``/v2/groups/{type}/{id}/indicators/urls``
* ``/v2/groups/{type}/{id}/indicators/urls/{indicatorId}``
* ``/v2/groups/{type}/{id}/publish``
* ``/v2/groups/{type}/{id}/securityLabels``
* ``/v2/groups/{type}/{id}/securityLabels/{securityLabel}``
* ``/v2/groups/{type}/{id}/tags``
* ``/v2/groups/{type}/{id}/tags/{tagName}``
* ``/v2/groups/{type}/{id}/victimAssets``
* ``/v2/groups/{type}/{id}/victimAssets/emailAddresses``
* ``/v2/groups/{type}/{id}/victimAssets/emailAddresses/{assetId}``
* ``/v2/groups/{type}/{id}/victimAssets/networkAccounts``
* ``/v2/groups/{type}/{id}/victimAssets/networkAccounts/{assetId}``
* ``/v2/groups/{type}/{id}/victimAssets/phoneNumbers``
* ``/v2/groups/{type}/{id}/victimAssets/phoneNumbers/{assetId}``
* ``/v2/groups/{type}/{id}/victimAssets/socialNetworks``
* ``/v2/groups/{type}/{id}/victimAssets/socialNetworks/{assetId}``
* ``/v2/groups/{type}/{id}/victimAssets/webSites``
* ``/v2/groups/{type}/{id}/victimAssets/webSites/{assetId}``
* ``/v2/groups/{type}/{id}/victims``
* ``/v2/groups/{type}/{id}/victims/{victimId}``

Adversary Specific Branches
"""""""""""""""""""""""""""

* ``/v2/groups/adversaries/{id}/adversaryAssets``
* ``/v2/groups/adversaries/{id}/adversaryAssets/handles``
* ``/v2/groups/adversaries/{id}/adversaryAssets/phoneNumbers``
* ``/v2/groups/adversaries/{id}/adversaryAssets/urls``
* ``/v2/groups/adversaries/{id}/adversaryAssets/handles/{assetId}``
* ``/v2/groups/adversaries/{id}/adversaryAssets/phoneNumbers/{assetId}``
* ``/v2/groups/adversaries/{id}/adversaryAssets/urls/{assetId}``

Document Specific Branches
""""""""""""""""""""""""""

* ``/v2/groups/documents``
* ``/v2/groups/documents/{id}``
* ``/v2/groups/documents/{id}/download``
* ``/v2/groups/documents/{id}/upload``

Indicators
^^^^^^^^^^

* ``/v2/indicators``
* ``/v2/indicators/{type}``
* ``/v2/indicators/{type}/{id}``
* ``/v2/indicators/{type}/{id}/attributes``
* ``/v2/indicators/{type}/{id}/observations``
* ``/v2/indicators/{type}/{id}/observationCount``
* ``/v2/indicators/{type}/{id}/falsePositive``
* ``/v2/indicators/{type}/{id}/attributes/{attributeId}``
* ``/v2/indicators/{type}/{id}/attributes/{attributeId}/securityLabels``
* ``/v2/indicators/{type}/{id}/attributes/{attributeId}/securityLabels/{securityLabel}``
* ``/v2/indicators/{type}/{id}/groups``
* ``/v2/indicators/{type}/{id}/groups/adversaries``
* ``/v2/indicators/{type}/{id}/groups/adversaries/{groupId}``
* ``/v2/indicators/{type}/{id}/groups/documents``
* ``/v2/indicators/{type}/{id}/groups/documents/{groupId}``
* ``/v2/indicators/{type}/{id}/groups/emails``
* ``/v2/indicators/{type}/{id}/groups/emails/{groupId}``
* ``/v2/indicators/{type}/{id}/groups/incidents``
* ``/v2/indicators/{type}/{id}/groups/incidents/{groupId}``
* ``/v2/indicators/{type}/{id}/groups/signatures``
* ``/v2/indicators/{type}/{id}/groups/signatures/{groupId}``
* ``/v2/indicators/{type}/{id}/groups/threats``
* ``/v2/indicators/{type}/{id}/groups/threats/{groupId}``
* ``/v2/indicators/{type}/{id}/indicators``
* ``/v2/indicators/files/{id}/fileOccurrences``
* ``/v2/indicators/files/{id}/fileOccurrences/{fileOccurrenceId}``
* ``/v2/indicators/{type}/{id}/indicators/addresses``
* ``/v2/indicators/{type}/{id}/indicators/addresses/{indicatorId}``
* ``/v2/indicators/{type}/{id}/indicators/emailAddresses``
* ``/v2/indicators/{type}/{id}/indicators/emailAddresses/{indicatorId}``
* ``/v2/indicators/{type}/{uniqueId}/associations/{associationType}/indicators/``
* ``/v2/indicators/{type}/{uniqueId}/associations/{associationType}/indicators/{targetType}``
* ``/v2/indicators/{type}/{uniqueId}/associations/{associationType}/indicators/{targetType}/{targetId}``
* ``/v2/indicators/{type}/{id}/indicators/files``
* ``/v2/indicators/{type}/{id}/indicators/files/{indicatorId}``
* ``/v2/indicators/{type}/{id}/indicators/hosts``
* ``/v2/indicators/{type}/{id}/indicators/hosts/{indicatorId}``
* ``/v2/indicators/{type}/{id}/indicators/urls``
* ``/v2/indicators/{type}/{id}/indicators/urls/{indicatorId}``
* ``/v2/indicators/{type}/{id}/owners``
* ``/v2/indicators/{type}/{id}/securityLabels``
* ``/v2/indicators/{type}/{id}/securityLabels/{securityLabel}``
* ``/v2/indicators/{type}/{id}/tags``
* ``/v2/indicators/{type}/{id}/tags/{tagName}``
* ``/v2/indicators/{type}/{id}/victimAssets``
* ``/v2/indicators/{type}/{id}/victimAssets/emailAddresses``
* ``/v2/indicators/{type}/{id}/victimAssets/emailAddresses/{assetId}``
* ``/v2/indicators/{type}/{id}/victimAssets/networkAccounts``
* ``/v2/indicators/{type}/{id}/victimAssets/networkAccounts/{assetId}``
* ``/v2/indicators/{type}/{id}/victimAssets/phoneNumbers``
* ``/v2/indicators/{type}/{id}/victimAssets/phoneNumbers/{assetId}``
* ``/v2/indicators/{type}/{id}/victimAssets/socialNetworks``
* ``/v2/indicators/{type}/{id}/victimAssets/socialNetworks/{assetId}``
* ``/v2/indicators/{type}/{id}/victimAssets/webSites``
* ``/v2/indicators/{type}/{id}/victimAssets/webSites/{assetId}``
* ``/v2/indicators/{type}/{id}/victims``
* ``/v2/indicators/{type}/{id}/victims/{victimId}``

Bulk Indicator Download
"""""""""""""""""""""""

* ``/v2/indicators/bulk/``
* ``/v2/indicators/bulk/{format}``

Security Labels
^^^^^^^^^^^^^^^

* ``/v2/securityLabels``
* ``/v2/securityLabels/{id}``
* ``/v2/securityLabels/{id}/groups``
* ``/v2/securityLabels/{id}/groups/adversaries``
* ``/v2/securityLabels/{id}/groups/adversaries/{groupId}``
* ``/v2/securityLabels/{id}/groups/documents``
* ``/v2/securityLabels/{id}/groups/documents/{groupId}``
* ``/v2/securityLabels/{id}/groups/emails``
* ``/v2/securityLabels/{id}/groups/emails/{groupId}``
* ``/v2/securityLabels/{id}/groups/incidents``
* ``/v2/securityLabels/{id}/groups/incidents/{groupId}``
* ``/v2/securityLabels/{id}/groups/signatures``
* ``/v2/securityLabels/{id}/groups/signatures/{groupId}``
* ``/v2/securityLabels/{id}/groups/threats``
* ``/v2/securityLabels/{id}/groups/threats/{groupId}``
* ``/v2/securityLabels/{id}/indicators``
* ``/v2/securityLabels/{id}/indicators/addresses``
* ``/v2/securityLabels/{id}/indicators/addresses/{indicatorId}``
* ``/v2/securityLabels/{id}/indicators/emailAddresses``
* ``/v2/securityLabels/{id}/indicators/emailAddresses/{indicatorId}``
* ``/v2/securityLabels/{id}/indicators/files``
* ``/v2/securityLabels/{id}/indicators/files/{indicatorId}``
* ``/v2/securityLabels/{id}/indicators/hosts``
* ``/v2/securityLabels/{id}/indicators/hosts/{indicatorId}``
* ``/v2/securityLabels/{id}/indicators/urls``
* ``/v2/securityLabels/{id}/indicators/urls/{indicatorId}``

Tags
^^^^

* ``/v2/tags``
* ``/v2/tags/{id}``
* ``/v2/tags/{id}/groups``
* ``/v2/tags/{id}/groups/adversaries``
* ``/v2/tags/{id}/groups/adversaries/{groupId}``
* ``/v2/tags/{id}/groups/documents``
* ``/v2/tags/{id}/groups/documents/{groupId}``
* ``/v2/tags/{id}/groups/emails``
* ``/v2/tags/{id}/groups/emails/{groupId}``
* ``/v2/tags/{id}/groups/incidents``
* ``/v2/tags/{id}/groups/incidents/{groupId}``
* ``/v2/tags/{id}/groups/signatures``
* ``/v2/tags/{id}/groups/signatures/{groupId}``
* ``/v2/tags/{id}/groups/threats``
* ``/v2/tags/{id}/groups/threats/{groupId}``
* ``/v2/tags/{id}/indicators``
* ``/v2/tags/{id}/indicators/addresses``
* ``/v2/tags/{id}/indicators/addresses/{indicatorId}``
* ``/v2/tags/{id}/indicators/emailAddresses``
* ``/v2/tags/{id}/indicators/emailAddresses/{indicatorId}``
* ``/v2/tags/{id}/indicators/files``
* ``/v2/tags/{id}/indicators/files/{indicatorId}``
* ``/v2/tags/{id}/indicators/hosts``
* ``/v2/tags/{id}/indicators/hosts/{indicatorId}``
* ``/v2/tags/{id}/indicators/urls``
* ``/v2/tags/{id}/indicators/urls/{indicatorId}``

Tasks
^^^^^

* ``/v2/tasks``
* ``/v2/tasks/{id}``
* ``/v2/tasks/{id}/escalatees``
* ``/v2/tasks/{id}/assignees``
* ``/v2/tasks/{id}/assignees/{assigneeId}``
* ``/v2/tasks/{id}/escalatees/{escalateeId}``
* ``/v2/tasks/{id}/escalatees/{userName}``
* ``/v2/tasks/{id}/assignees/{userName}``
* ``/v2/tasks/{id}/groups``
* ``/v2/tasks/{id}/groups/adversaries``
* ``/v2/tasks/{id}/groups/adversaries/{groupId}``
* ``/v2/tasks/{id}/groups/documents``
* ``/v2/tasks/{id}/groups/documents/{groupId}``
* ``/v2/tasks/{id}/groups/emails``
* ``/v2/tasks/{id}/groups/emails/{groupId}``
* ``/v2/tasks/{id}/groups/incidents``
* ``/v2/tasks/{id}/groups/incidents/{groupId}``
* ``/v2/tasks/{id}/groups/signatures``
* ``/v2/tasks/{id}/groups/signatures/{groupId}``
* ``/v2/tasks/{id}/groups/threats``
* ``/v2/tasks/{id}/groups/threats/{groupId}``
* ``/v2/tasks/{id}/indicators``
* ``/v2/tasks/{id}/indicators/addresses``
* ``/v2/tasks/{id}/indicators/addresses/{indicatorId}``
* ``/v2/tasks/{id}/indicators/emailAddresses``
* ``/v2/tasks/{id}/indicators/emailAddresses/{indicatorId}``
* ``/v2/tasks/{id}/indicators/files``
* ``/v2/tasks/{id}/indicators/files/{indicatorId}``
* ``/v2/tasks/{id}/indicators/hosts``
* ``/v2/tasks/{id}/indicators/hosts/{indicatorId}``
* ``/v2/tasks/{id}/indicators/urls``
* ``/v2/tasks/{id}/indicators/urls/{indicatorId}``
* ``/v2/tasks/{id}/attributes``
* ``/v2/tasks/{id}/tags``
* ``/v2/tasks/{id}/tags/{tagName}``

Victims
^^^^^^^

* ``/v2/victims``
* ``/v2/victims/{id}``
* ``/v2/victims/{id}/groups``
* ``/v2/victims/{id}/groups/adversaries``
* ``/v2/victims/{id}/groups/adversaries/{groupId}``
* ``/v2/victims/{id}/groups/documents``
* ``/v2/victims/{id}/groups/documents/{groupId}``
* ``/v2/victims/{id}/groups/emails``
* ``/v2/victims/{id}/groups/emails/{groupId}``
* ``/v2/victims/{id}/groups/incidents``
* ``/v2/victims/{id}/groups/incidents/{groupId}``
* ``/v2/victims/{id}/groups/signatures``
* ``/v2/victims/{id}/groups/signatures/{groupId}``
* ``/v2/victims/{id}/groups/threats``
* ``/v2/victims/{id}/groups/threats/{groupId}``
* ``/v2/victims/{id}/indicators``
* ``/v2/victims/{id}/indicators/addresses``
* ``/v2/victims/{id}/indicators/addresses/{indicatorId}``
* ``/v2/victims/{id}/indicators/emailAddresses``
* ``/v2/victims/{id}/indicators/emailAddresses/{indicatorId}``
* ``/v2/victims/{id}/indicators/files``
* ``/v2/victims/{id}/indicators/files/{indicatorId}``
* ``/v2/victims/{id}/indicators/hosts``
* ``/v2/victims/{id}/indicators/hosts/{indicatorId}``
* ``/v2/victims/{id}/indicators/urls``
* ``/v2/victims/{id}/indicators/urls/{indicatorId}``
* ``/v2/victims/{uniqueId}/victimAssets``
* ``/v2/victims/{id}/victimAssets/emailAddresses``
* ``/v2/victims/{id}/victimAssets/emailAddresses/{assetId}``
* ``/v2/victims/{id}/victimAssets/networkAccounts``
* ``/v2/victims/{id}/victimAssets/networkAccounts/{assetId}``
* ``/v2/victims/{id}/victimAssets/phoneNumbers``
* ``/v2/victims/{id}/victimAssets/phoneNumbers/{assetId}``
* ``/v2/victims/{id}/victimAssets/socialNetworks``
* ``/v2/victims/{id}/victimAssets/socialNetworks/{assetId}``
* ``/v2/victims/{id}/victimAssets/webSites``
* ``/v2/victims/{id}/victimAssets/webSites/{assetId}``


Misc
^^^^

Batch Indicator Commit
""""""""""""""""""""""

* ``/v2/batch``
* ``/v2/batch/{id}``
* ``/v2/batch/{id}``
* ``/v2/batch/{id}/errors``

User Information
""""""""""""""""

* ``/v2/whoami``

Collections Resources
~~~~~~~~~~~~~~~~~~~~~

The example below is of sample Collections-request path with
pagination-query parameters for Incidents:

.. code::

    /v2/groups/incidents?resultStart=0&resultLimit=50

For requests to Resources that are Collections, such as Incidents,
Indicators, etc., pagination is required.

Pagination works by specifying a starting result index, as well as a
result limit of items to be returned as HTTP query parameters to the
request. For example, requesting a result start index of 50 and a result
limit of 100 will retrieve items 50 to 150.

The table below displays the query parameters.

+---------------+-----------------------------------------------+---------+
| HTTP Query    | Description                                   | Default |
| Parameter     |                                               |         |
+===============+===============================================+=========+
| resultStart\* | The starting index of the result list that is | 0       |
|               | returned                                      |         |
+---------------+-----------------------------------------------+---------+
| resultLimit   | The limit to the number of results to return  | 100     |
|               | with the request                              |         |
+---------------+-----------------------------------------------+---------+

\*Specifying a resultStart other than 0 will omit the resultCount field
in the return data for performance reasons.

A Collections Resource request that does not include the parameters
indicated is assumed to use the default values above. A request having a
resultStart value of 0 will return the current count of all items in the
Collection. This count should be saved to iterate over the Collection
and to know when all items have been retrieved. The maximum value that
can be specified for resultLimit is 500.

.. note:: Pagination counts and Indices should not be stored in long-lived applications as a way to return to a result-set. The dataset will change with time, so those range markers might cause objects to be skipped or duplicated if reused at a later time.

Owners Service
~~~~~~~~~~~~~~

View all Owners that are accessible to the current API User.

.. code::

    GET /v2/owners

Owners Service JSON Response:

.. code:: json

    {
      "status": "Success",
      "data": {
        "resultCount": 2,
        "owner": [
          {
            "id": 0,
            "name": "Exemplary Organization",
            "type": "Organization"
          },
          {
            "id": 1,
            "name": "Common Community",
            "type": "Community"
          },
        ]
      }
    }

Owners Service XML Response:

.. code:: xml

    <ownersResponse>
      <Status>Success</Status>
      <Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ownerListResponseData">
        <ResultCount>2</ResultCount>
        <Owner xsi:type="organization">
          <Id>0</Id>
          <Name>Exemplary Organization</Name>
        </Owner>
        <Owner xsi:type="community">
          <Id>1</Id>
          <Name>Common Community</Name>
        </Owner>
      </Data>
    </ownersResponse>

View the Owner Organization for the current API User.

.. code::

    GET /v2/owners/mine

.. code:: json

    {
      "status": "Success",
      "data": {
        "owner": {
          "id": 0,
          "name": "My Organization",
          "type": "Organization"
        }
      }
    }

View all members of your organization.

.. code::

    GET /v2/owners/mine/members

.. code:: json

    Response if Organization allows anonymous membership:
    {
        "anonymous": true,
        "status": "Success",
        "resultCount": 2,
        "members":
        [
         "pseudonym": "test",
         "pseudonym": "test2"
        ]
      
    }

    Response if Organization does not allow anonymous membership:
    {
      "status": "Success",
      "data": {
        "user": [
          {
            "userName": "12345678901234567890",
            "firstName": "Jane",
            "lastName": "Doe"
          },
          {
            "userName": "12345678901234567891",
            "firstName": "John",
            "lastName": "Doe"
          }
        ]
      }
    }

The example below is of a request path with Owner query parameter for Indicators Collection:

.. code::

    /v2/indicators?owner=Common%20Community

The example below is of a request path with Owner query parameter for Host Indicator example.com:

.. code::

    /v2/indicators/hosts/example.com?owner=Common%20Community

The example below is a request to see available Owners of the specified Indicators:

.. code::

    /v2/indicators/hosts/example.com/owners

Threats Collection for the Common Community:

.. code::

    /v2/groups/threats?owner=Common%20Community

Specific Threat (Owner implied by ID):

.. code::

    /v2/groups/threats/300

ThreatConnect version 5.2 allows you to pass multiple ``owner`` parameters into a GET request to an object’s base branch, as shown in this example:

``GET /v2/{itemType}?owner=Example%20Community&owner=Test%20Community``

This query will return all instances of the specified ``itemType`` that exist in any of the given owners. For example, the following query would return all IP addresses in the Example Community or the Test Community:

``GET /v2/addresses?owner=Example%20Community&owner=Test%20Community``

The following query will return all Adversaries in the Example Community or the Test Community: 

``GET /v2/adversaries?owner=Example%20Community&owner=Test%20Community``

The JSON response from the foregoing query above is as follows:

.. code-block:: json

    {
      "status": "Success",
      "data": {
        "resultCount": 2,
        "group": [
          {
            "id": 123456,
            "name": "njRAT",
            "type": "Adversary",
            "ownerName": "Example Community",
            "dateAdded": "2017-06-16T18:52:50Z",
            "webLink": "https://app.threatconnect.com/auth/adversary/adversary.xhtml?adversary=123456"
          },
          {
            "id": 654321,
            "name": "njRAT",
            "type": "Adversary",
            "ownerName": "Test Community",
            "dateAdded": "2017-06-16T18:51:57Z",
            "webLink": "https://app.threatconnect.com/auth/adversary/adversary.xhtml?adversary=654321"
          }
        ]
      }
    }

Whoami Service
~~~~~~~~~~~~~~

The whoami branch, shown below, provides information about the current user.

.. code::

    /v2/whoami

A GET request to this branch will return the following data:

.. code-block:: json

    {
      "status": "Success",
      "data": {
        "user": {
          "userName": "12345678901234567890",
          "firstName": "John",
          "lastName": "Doe",
          "pseudonym": "Buck",
          "role": "Api User"
        }
      }
    }

Indicators Service
~~~~~~~~~~~~~~~~~~

Example Indicator Service Path:

.. code::

    /v2/indicators/hosts?resultStart=0&resultLimit=20
    /v2/indicators/hosts?owner=Common%20Community&resultStart=0&resultLimit=20

The ThreatConnect API Indicators Service allows for the querying of a
generic Collection of Indicators for a user’s Organization, as well as
any Communities to which the user has access.

Note that the results will contain a mix of Indicator types, including
variations, such as IPv4/IPv6 for addresses or MD5/SHA-1/SHA-256 for
files. A list of Indicators from both the Groups and Tags Service can
also be retrieved.

Filtering Indicators
~~~~~~~~~~~~~~~~~~~~

The example below demonstrates usage of the modifiedSince parameter:

.. code::

    /v2/indicators?modifiedSince=2014-08-21T12:00:00Z

The example below demonstrates usage of the modifiedSince parameter and
an additional parameter:

.. code::

    /v2/indicators?modifiedSince=2014-08-21T12:00:00Z&owner=Common%20Community

The example below demonstrates usage of the summary parameter:

.. code::

    /v2/indicators?filters=summary%3Dexample.com

The example below demonstrates usage of the rating parameter:

.. code::

    /v2/indicators?filters=rating%3E3

The example below demonstrates usage of the threatAssessConfidence
parameter:

.. code::

    /v2/indicators/urls?filters=threatAssessConfidence%3E50

The example below demonstrates usage of the organization parameter:

.. code::

    /v2/indicators/addresses?filters=organization%3Dmosso%20hosting

The example below demonstrates usage of the whoisActive parameter:

.. code::

    /v2/indicators/hosts?filters=whoisActive%3Dtrue

The example below demonstrates usage of a Group name parameter:

.. code::

    /v2/groups?filters=name%5ETest

The example below demonstrates usage of a Group fileType parameter:

.. code::

    /v2/groups/documents?filters=fileType%3DPDF

The example below demonstrates usage of a securityLabels filter
parameter:

.. code::

    /v2/securityLabels?filters=name%3Ddictators

The example below demonstrates usage of a victim filter parameter:

.. code::

    /v2/victims?filters=name%5ETest

The example below demonstrates usage of a tag filter parameter:

.. code::

    /v2/tags?filters=weight%3E2

The example below demonstrates usage multiple parameters (with implicit
AND):

.. code::

    /v2/indicators?filters=summary%3Dexample.com,dateAdded%3C20151015

The example below demonstrates usage multiple parameters (with
parameters OR’ed):

.. code::

    /v2/indicators?filters=summary%3Dexample.com,dateAdded%3E20151015&orParams=true

To prevent the ThreatConnect API from returning an entire result-set, limit
the scope of the query based on the modifiedSince parameter. When a
query from the list below is issued with this parameter, it will only
return Indicators whose lastModified field contains a value on or after
the time specified by the included ISO 8601 time-stamp.

Use the modifiedSince parameter on the Indicators Service, e.g.,
``/v2/indicators``

Note that the ISO 8601 time-stamp is in the same format used to display
an Indicator’s lastModified value, and it can also be used in
conjunction with other parameters.

Note that an Indicator’s lastModified field is used to determine whether
or not it will be included with such a query. The following actions
update an Indicator’s lastModified field: - Creating the Indicator
manually - Importing the Indicator via structured or unstructured import
- Changing or resetting the Indicator’s "Threat" Rating - Changing the
Indicator’s Confidence value

**Filters**

+------------------------------------+------------+-----------+----------------------------------+
| Name                               | Data Type  | Operators | DB Field                         |
+====================================+============+===========+==================================+
| **Indicator Common Filters**       |            |           |                                  |
+------------------------------------+------------+-----------+----------------------------------+
| summary                            | String     | ``= ^``   | indicator.summary                |
+------------------------------------+------------+-----------+----------------------------------+
| dateAdded                          | Date       | ``< >``   | indicator.dateAdded              |
+------------------------------------+------------+-----------+----------------------------------+
| rating                             | BigDecimal | ``<>``    | indicator.rating                 |
+------------------------------------+------------+-----------+----------------------------------+
| confidence                         | Short      | ``=<>``   | indicator.confidence             |
+------------------------------------+------------+-----------+----------------------------------+
| threatAssessRating                 | Double     | ``<>``    | commonIndicator.rating           |
+------------------------------------+------------+-----------+----------------------------------+
| threatAssessConfidence             | Double     | ``<>``    | commonIndicator.confidence       |
+------------------------------------+------------+-----------+----------------------------------+
| **Address Specific Filters**       |            |           |                                  |
+------------------------------------+------------+-----------+----------------------------------+
| countryCode                        | String     | ``=``     | ipgeo.countryCode                |
+------------------------------------+------------+-----------+----------------------------------+
| organization                       | String     | ``=``     | ipgeo.registeringOrg             |
+------------------------------------+------------+-----------+----------------------------------+
| asn                                | Integer    | ``=``     | ipgeo.asn                        |
+------------------------------------+------------+-----------+----------------------------------+
| **Host Specific Filters**          |            |           |                                  |
+------------------------------------+------------+-----------+----------------------------------+
| whoisActive                        | Boolean    | ``=``     | Indicator.flag2 on a host record |
+------------------------------------+------------+-----------+----------------------------------+
| dnsActive                          | Boolean    | ``=``     | Indicator.flag1 on a host record |
+------------------------------------+------------+-----------+----------------------------------+
| **Groups Type Filters**            |            |           |                                  |
+------------------------------------+------------+-----------+----------------------------------+
| name                               | String     | ``= ^``   | bucket.name                      |
+------------------------------------+------------+-----------+----------------------------------+
| dateAdded                          | Date       | ``=<>``   | bucket.dateAdded                 |
+------------------------------------+------------+-----------+----------------------------------+
| **Groups Document Filter**         |            |           |                                  |
+------------------------------------+------------+-----------+----------------------------------+
| fileType                           | String     | ``=``     | bucketDocument.type              |
+------------------------------------+------------+-----------+----------------------------------+
| **Security Label Specific Filter** |            |           |                                  |
+------------------------------------+------------+-----------+----------------------------------+
| name                               | String     | ``= ^``   | securitylabel.name               |
+------------------------------------+------------+-----------+----------------------------------+
| **Tag Specific Filter**            |            |           |                                  |
+------------------------------------+------------+-----------+----------------------------------+
| name                               | String     | ``= ^``   | tag.name                         |
+------------------------------------+------------+-----------+----------------------------------+
| weight                             | Integer    | ``=<>``   | tag.weight                       |
+------------------------------------+------------+-----------+----------------------------------+
| **Victim Specific Filter**         |            |           |                                  |
+------------------------------------+------------+-----------+----------------------------------+
| name                               | String     | ``=  ^``  | victim.name                      |
+------------------------------------+------------+-----------+----------------------------------+

.. note:: ``<``, ``>``, and ``^`` operators need to be escaped in the url as: ``< %3C``, ``> %3E``, ``^ %5E``.

Resource Types
~~~~~~~~~~~~~~

Below is a list of all Resource Types and all HTTP paths for obtaining
each Resource Type. The following tables list when pagination is
required or if the specific path supports specifying an Owner. Note that
if a path does not support the Owner argument, but one is supplied, the
argument will simply be ignored. Detailed information on each of the
Resource Types, as well as example responses, are available later in
this document. The table above also references multiple Indicator and Group
types. Currently, these are the supported types for each entity:

Indicators: ``/v2/indicators/``

-  Addresses: ``/v2/indicators/addresses/``
-  Email Addresses: ``/v2/indicators/emailAddresses/``
-  Files: ``/v2/indicators/files/``
-  Hosts: ``/v2/indicators/hosts/``
-  Urls: ``/v2/indicators/urls/``

Groups: ``/v2/groups/``

-  Adversaries: ``/v2/groups/adversaries/``
-  Campaigns: ``/v2/groups/campaigns/``
-  Documents: ``/v2/groups/documents/``
-  Emails: ``/v2/groups/emails/``
-  Incidents: ``/v2/groups/incidents/``
-  Signatures: ``/v2/groups/signatures/``
-  Threats: ``/v2/groups/threats/``

Other

-  Tags: ``/v2/tags/``
-  Tasks: ``/v2/tasks/``
-  Victims: ``/v2/victims/``

Indicators Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^

Indicators Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 2,
      "indicator": [{
       "id": 6574,
       "ownerName": "Organization Name",
       "type": "Host",
       "dateAdded": "2013-11-20T01:13:12Z",
       "lastModified": "2013-11-20T01:13:12Z",
       "confidence": 0,
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/host.xhtml?host=test.com&owner=Organization+Name",
       "description": "Host Description",
       "summary": "test.com"
      }, {
       "id": 199,
       "ownerName": "Organization Name",
       "type": "File",
       "dateAdded": "2013-08-21T14:14:42Z",
       "lastModified": "2013-08-21T14:14:42Z",
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/file.xhtml?file=A35A766A9F881A8E6B01BBBC0D6BE829&owner=Organization+Name",
       "summary": "A35A766A9F881A8E6B01BBBC0D6BE829"
      }]
     }
    }

Indicators Resource Type XML Response:

.. code:: xml

    <indicatorsResponse>
     <Status>Success</Status>
     <Data xsi:type="indicatorListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>2</ResultCount>
      <Indicator>
       <Id>6574</Id>
       <OwnerName>Organization Name</OwnerName>
       <Type>Host</Type>
       <DateAdded>2013-11-20T01:13:12Z</DateAdded>
       <LastModified>2013-11-20T01:13:12Z</LastModified>
       <Confidence>0</Confidence>
       <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/host.xhtml?host=test.com&amp;owner=Organization+Name</WebLink>
       <Description>Host Description</Description>
       <Summary>test.com</Summary>
      </Indicator>
      <Indicator>
       <Id>199</Id>
       <OwnerName>Organization Name</OwnerName>
       <Type>File</Type>
       <DateAdded>2013-08-21T14:14:42Z</DateAdded>
       <LastModified>2013-08-21T14:14:42Z</LastModified>
       <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/file.xhtml?file=A35A766A9F881A8E6B01BBBC0D6BE829&amp;owner=Organization+Name</WebLink>
       <Summary>A35A766A9F881A8E6B01BBBC0D6BE829</Summary>
      </Indicator>
     </Data>
    </indicatorsResponse>

**Indicators Resource Type**

+---------------------------------------------------------+---------------+---------------------+
| Paths                                                   | Owner Allowed | Pagination Required |
+=========================================================+===============+=====================+
| ``/v2/indicators``                                      | TRUE          | TRUE                |
+---------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/indicators``             | FALSE         |                     |
+---------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/indicators``                      | TRUE          |                     |
+---------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/indicators`` | TRUE          |                     |
+---------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/indicators``                         | FALSE         |                     |
+---------------------------------------------------------+---------------+---------------------+
| ``/v2/tasks/{id}/indicators``                           | TRUE          |                     |
+---------------------------------------------------------+---------------+---------------------+

Indicator Types
^^^^^^^^^^^^^^^

Indicator Type query for available Indicator types:

.. code::

    /v2/types/indicatorTypes

Indicator Type query for details on a specific Indicator type:

.. code::

    /v2/types/indicatorTypes/{indicator type}

Indicator Type JSON Response:

.. code:: json

    {
      "status": "Success",
      "data": {
        "resultCount": 10,
        "indicatorType": [
          {
            "name": "Address",
            "custom": "false",
            "parsable": "true",
            "apiBranch": "addresses",
            "apiEntity": "address"
          },
          {
            "name": "EmailAddress",
            "custom": "false",
            "parsable": "true",
            "apiBranch": "emailAddresses",
            "apiEntity": "emailAddress"
          },
          {
            "name": "File",
            "custom": "false",
            "parsable": "true",
            "apiBranch": "files",
            "apiEntity": "file"
          },
          {
            "name": "Host",
            "custom": "false",
            "parsable": "true",
            "apiBranch": "hosts",
            "apiEntity": "host"
          },
          {
            "name": "URL",
            "custom": "false",
            "parsable": "true",
            "apiBranch": "urls",
            "apiEntity": "url"
          },
          {
            "name": "ASN",
            "custom": "true",
            "parsable": "true",
            "apiBranch": "asns",
            "apiEntity": "asn",
            "casePreference": "upper",
            "value1Label": "AS Number",
            "value1Type": "text",
            "value2Label": ""
          },
          {
            "name": "CIDR",
            "custom": "true",
            "parsable": "true",
            "apiBranch": "cidrBlocks",
            "apiEntity": "cidrBlock",
            "casePreference": "lower",
            "value1Label": "Block",
            "value1Type": "text",
            "value2Label": ""
          },
          {
            "name": "Mutex",
            "custom": "true",
            "parsable": "false",
            "apiBranch": "mutexes",
            "apiEntity": "mutex",
            "casePreference": "sensitive",
            "value1Label": "Mutex",
            "value1Type": "text",
            "value2Label": ""
          },
          {
            "name": "Registry Key",
            "custom": "true",
            "parsable": "false",
            "apiBranch": "registryKeys",
            "apiEntity": "registryKey",
            "casePreference": "sensitive",
            "value1Label": "Key Name",
            "value1Type": "text",
            "value2Label": "Value Name",
            "value2Type": "text"
          },
          {
            "name": "User Agent",
            "custom": "true",
            "parsable": "false",
            "apiBranch": "userAgents",
            "apiEntity": "userAgent",
            "casePreference": "sensitive",
            "value1Label": "User Agent String",
            "value1Type": "text",
            "value2Label": ""
          }
        ]
      }
    }

Indicator Type XML Response:

.. code:: xml

    <indicatorTypesResponse>
      <Status>Success</Status>
      <Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="indicatorTypeListResponseData">
        <ResultCount>10</ResultCount>
        <IndicatorType>
          <Name>Address</Name>
          <Custom>false</Custom>
          <Parsable>true</Parsable>
          <ApiBranch>addresses</ApiBranch>
          <ApiEntity>address</ApiEntity>
        </IndicatorType>
        <IndicatorType>
          <Name>EmailAddress</Name>
          <Custom>false</Custom>
          <Parsable>true</Parsable>
          <ApiBranch>emailAddresses</ApiBranch>
          <ApiEntity>emailAddress</ApiEntity>
        </IndicatorType>
        <IndicatorType>
          <Name>File</Name>
          <Custom>false</Custom>
          <Parsable>true</Parsable>
          <ApiBranch>files</ApiBranch>
          <ApiEntity>file</ApiEntity>
        </IndicatorType>
        <IndicatorType>
          <Name>Host</Name>
          <Custom>false</Custom>
          <Parsable>true</Parsable>
          <ApiBranch>hosts</ApiBranch>
          <ApiEntity>host</ApiEntity>
        </IndicatorType>
        <IndicatorType>
          <Name>URL</Name>
          <Custom>false</Custom>
          <Parsable>true</Parsable>
          <ApiBranch>urls</ApiBranch>
          <ApiEntity>url</ApiEntity>
        </IndicatorType>
        <IndicatorType>
          <Name>ASN</Name>
          <Custom>true</Custom>
          <Parsable>true</Parsable>
          <ApiBranch>asns</ApiBranch>
          <ApiEntity>asn</ApiEntity>
          <casePreference>upper</casePreference>
          <value1Label>AS Number</value1Label>
          <value1Type>text</value1Type>
          <value2Label/>
        </IndicatorType>
        <IndicatorType>
          <Name>CIDR</Name>
          <Custom>true</Custom>
          <Parsable>true</Parsable>
          <ApiBranch>cidrBlocks</ApiBranch>
          <ApiEntity>cidrBlock</ApiEntity>
          <casePreference>lower</casePreference>
          <value1Label>Block</value1Label>
          <value1Type>text</value1Type>
          <value2Label/>
        </IndicatorType>
        <IndicatorType>
          <Name>Mutex</Name>
          <Custom>true</Custom>
          <Parsable>false</Parsable>
          <ApiBranch>mutexes</ApiBranch>
          <ApiEntity>mutex</ApiEntity>
          <casePreference>sensitive</casePreference>
          <value1Label>Mutex</value1Label>
          <value1Type>text</value1Type>
          <value2Label/>
        </IndicatorType>
        <IndicatorType>
          <Name>Registry Key</Name>
          <Custom>true</Custom>
          <Parsable>false</Parsable>
          <ApiBranch>registryKeys</ApiBranch>
          <ApiEntity>registryKey</ApiEntity>
          <casePreference>sensitive</casePreference>
          <value1Label>Key Name</value1Label>
          <value1Type>text</value1Type>
          <value2Label>Value Name</value2Label>
          <value2Type>text</value2Type>
        </IndicatorType>
        <IndicatorType>
          <Name>User Agent</Name>
          <Custom>true</Custom>
          <Parsable>false</Parsable>
          <ApiBranch>userAgents</ApiBranch>
          <ApiEntity>userAgent</ApiEntity>
          <casePreference>sensitive</casePreference>
          <value1Label>User Agent String</value1Label>
          <value1Type>text</value1Type>
          <value2Label/>
        </IndicatorType>
      </Data>
    </indicatorTypesResponse>

To support `custom Indicator
types <http://docs.threatconnect.com/#custom-indicator-types>`__, the
API branch ``/v2/types/indicatorTypes`` will return all of the Indicator
types available in that instance of ThreatConnect. This API branch will
also return the name of the API branch and API entity for each Indicator
type. For more information about a specific Indicator type, add the
Indicator type to the end of the query above, e.g.,
``/v2/types/indicatorTypes/{indicator_type}``. The output on the right
shows the Indicator types currently in the ThreatConnect Cloud.

In ThreatConnect version 5.2+, it is possible to retrieve the regular expression(s) (regex(es)) used to detect and validate an Indicator of a given type. These regexes can be retrieved by adding the ``includeAdditional=true`` parameter as follows:

``GET /v2/types/indicatorTypes/{indicatorType}?includeAdditional=true``

The following example will return the regexes used to validate IP Address Indicators:

``GET /v2/types/indicatorTypes/address?includeAdditional=true``

The JSON response from this query is as follows:

.. code-block:: json

    {
      "status": "Success",
      "data": {
        "indicatorType": {
          "name": "Address",
          "custom": "false",
          "parsable": "true",
          "apiBranch": "addresses",
          "apiEntity": "address",
          "regexes": [
            "{ip.v4 address regex}",
            "{ip.v6 address regex}"
          ]
        }
      }
    }

Hosts Resource Type
^^^^^^^^^^^^^^^^^^^

Hosts Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 2,
      "host": [{
       "id": 6574,
       "ownerName": "Organization Name",
       "dateAdded": "2013-11-20T01:13:12Z",
       "lastModified": "2013-11-20T01:13:12Z",
       "confidence": 0,
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/host.xhtml?host=test.com&owner=Organization+Name",
       "description": "Host Description",
       "hostName": "test.com"
      }, {
       "id": 197,
       "ownerName": "Organization Name",
       "dateAdded": "2013-08-21T11:31:41Z",
       "lastModified": "2013-08-21T11:31:41Z",
       "rating": 4,
       "confidence": 44,
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/host.xhtml?host=example.com&owner=Organization+Name",
       "hostName": "example.com"
      }]
     }
    }

Hosts Resource Type XML Response:

.. code:: xml

    <hostsResponse>
     <Status>Success</Status>
     <Data xsi:type="hostListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>2</ResultCount>
      <Host>
       <Id>6574</Id>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-11-20T01:13:12Z</DateAdded>
       <LastModified>2013-11-20T01:13:12Z</LastModified>
       <Confidence>0</Confidence>
       <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/host.xhtml?host=test.com&amp;owner=Organization+Name</WebLink>
       <Description>Host Description</Description>
       <HostName>test.com</HostName>
      </Host>
      <Host>
       <Id>197</Id>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-08-21T11:31:41Z</DateAdded>
       <LastModified>2013-08-21T11:31:41Z</LastModified>
       <Rating>4.00</Rating>
       <Confidence>44</Confidence>
       <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/host.xhtml?host=example.com&amp;owner=Organization+Name</WebLink>
       <HostName>example.com</HostName>
      </Host>
     </Data>
    </hostsResponse>

A list of Hosts from both the Groups and Tags Service can be retrieved,
as detailed in the table below.

**Hosts Resource Type**

+---------------------------------------------------------------+---------------+---------------------+
| Paths                                                         | Owner Allowed | Pagination Required |
+===============================================================+===============+=====================+
| ``/v2/indicators/hosts``                                      | TRUE          | TRUE                |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/indicators/hosts``             | FALSE         |                     |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/indicators/hosts``                      | TRUE          |                     |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/indicators/hosts`` | TRUE          |                     |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/indicators/hosts``                         | FALSE         |                     |
+---------------------------------------------------------------+---------------+---------------------+

Host Resource Type
^^^^^^^^^^^^^^^^^^

Example of Indicator Service query for a specific Host for a user’s
Organization:

.. code::

    /v2/indicators/hosts/example.com

Example of an Indicator Service query for a specific Host to the
Communities to which a user has access:

.. code::

    /v2/indicators/hosts/example.com?owner=Common%20Community

Host Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "host": {
       "id": 6574,
       "owner": {
        "id": 1,
        "name": "Organization Name",
        "type": "Organization"
       },
       "dateAdded": "2013-11-20T01:13:12Z",
       "lastModified": "2013-11-20T01:13:12Z",
       "confidence": 0,
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/host.xhtml?host=test.com&owner=Organization+Name",
       "description": "Host Description",
       "hostName": "test.com",
       "dnsActive": "false",
       "whoisActive": "false"
      }
     }
    }

Host Resource Type XML Response:

.. code:: xml

    <hostResponse>
     <Status>Success</Status>
     <Data xsi:type="hostResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Host>
       <Id>6574</Id>
       <Owner xsi:type="organization">
        <Id>1</Id>
        <Name>Organization Name</Name>
        <Type>Organization</Type>
       </Owner>
       <DateAdded>2013-11-20T01:13:12Z</DateAdded>
       <LastModified>2013-11-20T01:13:12Z</LastModified>
       <Confidence>0</Confidence>
       <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/host.xhtml?host=test.com&amp;owner=Organization+Name</WebLink>
       <Description>Host Description</Description>
       <HostName>test.com</HostName>
       <DnsActive>false</DnsActive>
       <WhoisActive>false</WhoisActive>
      </Host>
     </Data>
    </hostResponse>

The Indicators Service allows for the querying of a specific Host for a
user’s Organization, as well as any Communities to which a user has
access.

**Host Resource Type**

+-------------------------------------+---------------+---------------------+
| Paths                               | Owner Allowed | Pagination Required |
+=====================================+===============+=====================+
| ``/v2/indicators/hosts/{hostname}`` | TRUE          | FALSE               |
+-------------------------------------+---------------+---------------------+

For each Host, its Attributes, DNS Resolutions, associated Groups, Tags,
Security Labels, Victims, Victim Assets, and available Owners can also
be retrieved.

Retrieving Host DNS Resolutions
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Example of DNS History request for a Host within an Organization:

.. code::

    /v2/indicators/hosts/example.com/dnsResolutions

Example of DNS History request for a Host within a Community:

.. code::

    /v2/indicators/hosts/example.com/dnsResolutions?owner=Common%20Community

DNSResolutions Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 1,
      "dnsResolution": [{
       "resolutionDate": "2017-01-30T20:49:05Z",
       "addresses": [{
        "id": 123456,
        "ownerName": "Organization Name",
        "dateAdded": "2017-01-20T20:49:05Z",
        "lastModified": "2017-01-27T20:49:05Z",
        "threatAssessRating": 3.0,
        "threatAssessConfidence": 50.0,
        "webLink": "https://demo.threatconnect.com/tc/auth/indicators/details/address.xhtml?address=192.168.100.1&owner=Organization+Name",
        "ip": "192.168.100.1"
       }]
      }]
     }
    }

DNSResolutions Resource Type XML Response:

.. code:: xml

    <dnsResolutionsResponse>
     <Status>Success</Status>
     <Data xsi:type="dnsResolutionListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>1</ResultCount>
      <DnsResolution>
       <ResolutionDate>2013-11-18T13:27:35Z</ResolutionDate>
       <Addresses>
        <Id>123456</Id>
        <OwnerName>Organization Name</OwnerName>
        <DateAdded>2017-01-20T20:49:05Z</DateAdded>
        <LastModified>2017-01-27T20:49:05Z</LastModified>
        <ThreatAssessRating>3.0</ThreatAssessRating>
        <ThreatAssessConfidence>50.0</ThreatAssessConfidence>
        <WebLink>https://demo.threatconnect.com/tc/auth/indicators/details/address.xhtml?address=192.168.100.1&amp;owner=Organization+Name</WebLink>
        <Ip>192.168.100.1</Ip>
       </Addresses>
      </DnsResolution>
     </Data>
    </dnsResolutionsResponse>

Addresses Resource Type
^^^^^^^^^^^^^^^^^^^^^^^

Example of an Indicators Service query for a Collection of Addresses for
a user's organization:

.. code::

    /v2/indicators/addresses?resultStart=0&resultLimit=20

Example of an Indicator Service query for a Collection of Addresses to
the Communities to which a user has access:

.. code::

    /v2/indicators/addresses?owner=Common%20Community&resultStart=0&resultLimit=20

Example of an Indicators Service query for a specific Address for a
user's Organization:

.. code::

    /v2/indicators/addresses/192.168.1.1

Example of an Indicator Service query for a specific Address to the
Communities to which a user has access:

.. code::

    /v2/indicators/addresses/d24c:3256:0:0:0:0:0:2701?owner=Common%20Community

Addresses Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 2,
      "address": [{
       "id": 6710,
       "ownerName": "Organization Name",
       "dateAdded": "2013-12-22T14:53:51Z",
       "lastModified": "2013-12-22T14:53:51Z",
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/address.xhtml?address=192.168.1.1&owner=Organization+Name",
       "ip": "192.168.1.1"
      }, {
       "id": 198,
       "ownerName": "Organization Name",
       "dateAdded": "2013-08-21T12:58:49Z",
       "lastModified": "2013-08-21T12:58:49Z",
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/address.xhtml?address=d24c:3256:0:0:0:0:0:2701&owner=Organization+Name",
       "ip": "d24c:3256:0:0:0:0:0:2701"
      }]
     }
    }

Addresses Resource Type XML Response:

.. code:: xml

    <addressesResponse>
     <Status>Success</Status>
     <Data xsi:type="addressListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>2</ResultCount>
      <Address>
    <Id>6710</Id>
    <OwnerName>Organization Name</OwnerName>
    <DateAdded>2013-12-22T14:53:51Z</DateAdded>
    <LastModified>2013-12-22T14:53:51Z</LastModified>
    <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/address.xhtml?address=192.168.1.1&amp;owner=Organization+Name</WebLink>
    <Address>192.168.1.1</Address>
      </Address>
      <Address>
    <Id>198</Id>
    <OwnerName>Organization Name</OwnerName>
    <DateAdded>2013-08-21T12:58:49Z</DateAdded>
    <LastModified>2013-08-21T12:58:49Z</LastModified>
    <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/address.xhtml?address=d24c:3256:0:0:0:0:0:2701&amp;owner=Organization+Name</WebLink>
    <Address>d24c:3256:0:0:0:0:0:2701</Address>
      </Address>
     </Data>
    </addressesResponse>

The Indicators Service allows for the querying of a Collection of
Addresses for a user’s Organizations, as well as any Communities to
which a user has access. Both IPv4 and IPv6 address types are supported,
both with queries and as possible results, in the "ip" field.

A list of Addresses from both the Groups and Tags Service, as detailed
in the table below, may also be retrieved.

**Addresses Resource Type**

+-------------------------------------------------------------------+---------------+---------------------+
| Paths                                                             | Owner Allowed | Pagination Required |
+===================================================================+===============+=====================+
| ``/v2/indicators/addresses``                                      | TRUE          | TRUE                |
+-------------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/indicators/addresses``             | FALSE         |                     |
+-------------------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/indicators/addresses``                      | TRUE          |                     |
+-------------------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/indicators/addresses`` | TRUE          |                     |
+-------------------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/indicators/addresses``                         | FALSE         |                     |
+-------------------------------------------------------------------+---------------+---------------------+

The Indicators Service allows for the querying of a specific Address for
a user’s Organization, as well as any Communities to which a user has
access:

Address Resource Type
^^^^^^^^^^^^^^^^^^^^^

Address Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "address": {
       "id": 198,
       "owner": {
        "id": 1,
        "name": "Organization Name",
        "type": "Organization"
       },
       "dateAdded": "2013-08-21T12:58:49Z",
       "lastModified": "2013-08-21T12:58:49Z",
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/address.xhtml?address=192.168.1.1&owner=Organization+Name",
       "ip": "192.168.1.1"
      }
     }
    }

Address Resource TypeXML Response:

.. code:: xml

    <addressResponse>
     <Status>Success</Status>
     <Data xsi:type="addressResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Address>
    <Id>198</Id>
    <Owner xsi:type="organization">
    <Id>1</Id>
    <Name>Organization Name</Name>
    <Type>Organization</Type>
    </Owner>
    <DateAdded>2013-08-21T12:58:49Z</DateAdded>
    <LastModified>2013-08-21T12:58:49Z</LastModified>
    <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/address.xhtml?address=192.168.1.1&amp;owner=Organization+Name</WebLink>
    <Address>192.168.1.1</Address>
      </Address>
     </Data>
    </addressResponse>

**Address Resource Type**

+----------------------------------------+---------------+---------------------+
| Paths                                  | Owner Allowed | Pagination Required |
+========================================+===============+=====================+
| ``/v2/indicators/addresses/{address}`` | TRUE          | FALSE               |
+----------------------------------------+---------------+---------------------+

For each Address, its Attributes, DNS Resolutions, associated Groups,
Tags, Security Labels , Victims , Victim Assets , and available Owners
can also be retrieved.

Retrieving Address DNS Resolutions
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Example of DNS History request for an Address within an Organization:

.. code::

    /v2/indicators/addresses/192.168.0.1/dnsResolutions

Example of DNS History request for an Address within a Community:

.. code::

    /v2/indicators/addresses/192.168.0.1/dnsResolutions?owner=Common%20Community

DNSResolutions Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 1,
      "indicator": [{
       "id": 123456,
       "ownerName": "Organization Name",
       "type": "Host",
       "dateAdded": "2015-07-21T17:45:32Z",
       "lastModified": "2017-01-21T18:17:52Z",
       "rating": 5.00,
       "confidence": 85,
       "threatAssessRating": 4.36,
       "threatAssessConfidence": 80.67,
       "webLink": "https://demo.threatconnect.com/tc/auth/indicators/details/host.xhtml?host=example.com&owner=Organization+Name",
       "description": "Host retrieved from malware analysis.",
       "summary": "example.com"
       }
      ]
     }
    }

DNSResolutions Resource Type XML Response:

.. code:: xml

    <dnsResolutionsResponse>
     <Status>Success</Status>
     <Data xsi:type="dnsResolutionListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>1</ResultCount>
      <Indicator>
        <Id>123456</Id>
        <OwnerName>Organization Name</OwnerName>
        <Type>Host</Type>
        <DateAdded>2015-07-21T17:45:32Z</DateAdded>
        <LastModified>2017-01-13T18:17:52Z</LastModified>
        <Rating>5.00</Rating>
        <Confidence>85</Confidence>
        <ThreatAssessRating>4.36</ThreatAssessRating>
        <ThreatAssessConfidence>80.67</ThreatAssessConfidence>
        <WebLink>https://demo.threatconnect.com/tc/auth/indicators/details/host.xhtml?host=example.com&amp;owner=Organization+Name</WebLink>
        <Summary>example.com</Summary>
      </Indicator>
     </Data>
    </dnsResolutionsResponse>

Files Resource Type
^^^^^^^^^^^^^^^^^^^

Example of an Indicators Service query for a Collection of Files for a
user's organization:

.. code::

    /v2/indicators/files?resultStart=0&resultLimit=20

Example of an Indicator Service query for a Collection of Files to the
Communities to which a user has access:

.. code::

    /v2/indicators/files?owner=Common%20Community&resultStart=0&resultLimit=20

Example of an Indicators Service query for a Collection of Files for a
user's organization:

.. code::

    /v2/indicators/files/A35A766A9F881A8E6B01BBBC0D6BE829

Example of an Indicator Service query for a Collection of Files to the
Communities to which a user has access:

.. code::

    /v2/indicators/files/A35A766A9F881A8E6B01BBBC0D6BE829?owner=Common%20Community

Files Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 3,
      "file": [{
       "id": 258116,
       "ownerName": "Organization Name",
       "dateAdded": "2014-08-11T19:12:10-04:00",
       "lastModified": "2014-08-11T19:12:36-04:00",
       "rating": 4.0,
       "confidence": 81,
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/file.xhtml?file=222C230AE1C601AE0D125445BAB9728989AADDDA&owner=Organization+Name",
       "sha1": "222C230AE1C601AE0D125445BAB9728989AADDDA"
      }, {
       "id": 258117,
       "ownerName": "ThreatConnect-IRT",
       "dateAdded": "2014-08-11T19:12:10-04:00",
       "lastModified": "2014-08-11T19:12:36-04:00",
       "rating": 4.0,
       "confidence": 81,
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/file.xhtml?file=222DF09B9CC2994B1C8CB254E1BBD2D9EEDD1916AF0BBAA95F5A3DFF6E2A499C&owner=Organization+Name",
       "sha256": "222DF09B9CC2994B1C8CB254E1BBD2D9EEDD1916AF0BBAA95F5A3DFF6E2A499C"
      }, {
       "id": 258115,
       "ownerName": "ThreatConnect-IRT",
       "dateAdded": "2014-08-11T19:12:09-04:00",
       "lastModified": "2014-08-11T19:12:36-04:00",
       "rating": 4.0,
       "confidence": 81,
       "webLink": " https://app.threatconnect.com/tc/auth/indicators/details/file.xhtml?file=22202B566A725038BA2423C86B584428&owner=Organization+Name",
       "md5": "22202B566A725038BA2423C86B584428"
      }]
     }
    }

Files Resource Type XML Response:

.. code:: xml

    <filesResponse>
     <Status>Success</Status>
     <Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="fileListResponseData">
      <ResultCount>3</ResultCount>
      <File>
       <Id>258116</Id>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2014-08-11T19:12:10-04:00</DateAdded>
       <LastModified>2014-08-11T19:12:36-04:00</LastModified>
       <Rating>4.00</Rating>
       <Confidence>81</Confidence>
       <WebLink> https://app.threatconnect.com/tc/auth/indicators/details/file.xhtml?file=222C230AE1C601AE0D125445BAB9728989AADDDA&owner=Organization+Name</WebLink>
       <sha1>222C230AE1C601AE0D125445BAB9728989AADDDA</sha1>
      </File>
      <File>
       <Id>258117</Id>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2014-08-11T19:12:10-04:00</DateAdded>
       <LastModified>2014-08-11T19:12:36-04:00</LastModified>
       <Rating>4.00</Rating>
       <Confidence>81</Confidence>
       <WebLink> https://app.threatconnect.com/tc/auth/indicators/details/file.xhtml?file=222DF09B9CC2994B1C8CB254E1BBD2D9EEDD1916AF0BBAA95F5A3DFF6E2A499C&owner=Organization+Name</WebLink>
       <sha256>222DF09B9CC2994B1C8CB254E1BBD2D9EEDD1916AF0BBAA95F5A3DFF6E2A499C</sha256>
      </File>
      <File>
       <Id>258115</Id>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2014-08-11T19:12:09-04:00</DateAdded>
       <LastModified>2014-08-11T19:12:36-04:00</LastModified>
       <Rating>4.00</Rating>
       <Confidence>81</Confidence>
       <WebLink> https://app.threatconnect.com/tc/auth/indicators/details/file.xhtml?file=22202B566A725038BA2423C86B584428&owner=Organization+Name</WebLink>
       <md5>22202B566A725038BA2423C86B584428</md5>
      </File>
     </Data>
    </filesResponse>

The Indicators Service allows for the querying of a Collection of Files
for a user’s Organization, as well as any Communities to which a user
has access.

A list of Files from both the Groups and Tags Service, as detailed in the table below, can also be retrieved.

**Files Resource Type**

+---------------------------------------------------------------+---------------+---------------------+
| Paths                                                         | Owner Allowed | Pagination Required |
+===============================================================+===============+=====================+
| ``/v2/indicators/files``                                      | TRUE          | TRUE                |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/indicators/files``             | FALSE         |                     |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/indicators/files``                      | TRUE          |                     |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/indicators/files`` | TRUE          |                     |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/indicators/files``                         | FALSE         |                     |
+---------------------------------------------------------------+---------------+---------------------+

The Files Resource Type response format is to the right. Note that with
support for additional hash types, the Files response format may return
files identified by "md5," "sha1," or "sha256." It may also return
multiple records, one for each hash, even if they represent the same
file.

The Indicators Service allows for the querying of a specific File for a
user’s Organization, as well as any Communities to which a user has
access:.

File Resource Type
^^^^^^^^^^^^^^^^^^

File Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "file": {
       "id": 199,
       "owner": {
        "id": 1,
        "name": "Organization Name",
        "type": "Organization"
       },
       "dateAdded": "2013-08-21T14:14:42Z",
       "lastModified": "2013-08-21T14:14:42Z",
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/file.xhtml?file=A35A766A9F881A8E6B01BBBC0D6BE829&owner=Organization+Name",
       "md5": "A35A766A9F881A8E6B01BBBC0D6BE829",
       "sha1": "9F8CC0A150D272D9393F86B5F5F2D1265E8917D1",
       "sha256": "B4C1E9C99F861A4DD7654DCC3548AB5DDC15EE5FEB9690B9F716C4849714B20D"
      }
     }
    }

File Resource Type XML Response:

.. code:: xml

    <fileResponse>
     <Status>Success</Status>
     <Data xsi:type="fileResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <File>
       <Id>199</Id>
       <Owner xsi:type="organization">
        <Id>1</Id>
        <Name>Organization Name</Name>
        <Type>Organization</Type>
       </Owner>
       <DateAdded>2013-08-21T14:14:42Z</DateAdded>
       <LastModified>2013-08-21T14:14:42Z</LastModified>
       <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/file.xhtml?file=A35A766A9F881A8E6B01BBBC0D6BE829&amp;owner=Organization+Name</WebLink>
       <md5>A35A766A9F881A8E6B01BBBC0D6BE829</md5>
       <sha1>9F8CC0A150D272D9393F86B5F5F2D1265E8917D1</sha1>
       <sha256>B4C1E9C99F861A4DD7654DCC3548AB5DDC15EE5FEB9690B9F716C4849714B20D</sha256>
      </File>
     </Data>
    </fileResponse>

**File Resource Type**

+---------------------------------+---------------+---------------------+
| Paths                           | Owner Allowed | Pagination Required |
+=================================+===============+=====================+
| ``/v2/indicators/files/{hash}`` | TRUE          | FALSE               |
+---------------------------------+---------------+---------------------+

The File Resource Type response format is to the right. Note that any
valid MD5, SHA-1, or SHA-256 hash in the system may be supplied. If
found, the response will also include all linked hashes as below. Also
note that the File response may include only a subset (i.e., only MD5
and SHA-1), if those are the only known connections in the system.

For each File, its Attributes, associated Groups, Tags, Security Labels
, Victims , Victim Assets , and available Owners can be retrieved.

FileOccurrence Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

FileOccurrence Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "fileOccurrence": [{
       "id": 9722,
       "fileName": "badguy.dll",
       "path": "C:\\Windows\\System32",
       "date": "2014-11-05T00:00:00Z"
      }]
     }
    }

FileOccurrence Resource Type XML Response:

.. code:: xml

    <FileOccurrence>
     <Id>9722</Id>
     <FileName>badguy.dll </FileName>
     <Path> C:\Windows\System32</Path>
     <Date>2014-11-05T00:00:00Z</Date>
    </FileOccurrence>

For each File, its File Occurrences can be retrieved as detailed in the table below.

**FileOccurrence Resource Type**

+-------------------------------------------------+---------------+---------------------+
| Paths                                           | Owner Allowed | Pagination Required |
+=================================================+===============+=====================+
| ``/v2/indicators/files/{hash}/fileOccurrences`` | TRUE          | FALSE               |
+-------------------------------------------------+---------------+---------------------+

emailAddresses Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Example of an Indicators Service query for a Collection of Email
Addresses for a user's organization:

.. code::

    /v2/indicators/emailAddresses?resultStart=0&resultLimit=20

Example of an Indicator Service query for a Collection of Email
Addresses to the Communities to which a user has access:

.. code::

    /v2/indicators/emailAddresses?owner=Common%20Community&resultStart=0&resultLimit=20

emailAddresses Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 2,
      "emailAddress": [{
       "id": 6711,
       "ownerName": "Organization Name",
       "dateAdded": "2013-12-22T15:56:36Z",
       "lastModified": "2013-12-22T15:56:36Z",
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/emailaddress.xhtml?emailaddress=test@example.com&owner=Organization+Name",
       "address": "test@example.com"
      }, {
       "id": 6575,
       "ownerName": "Organization Name",
       "dateAdded": "2013-11-20T16:05:52Z",
       "lastModified": "2013-11-20T16:05:52Z",
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/emailaddress.xhtml?emailaddress=test@test.com&owner=Organization+Name",
       "address": "test@test.com"
      }]
     }
    }

emailAddresses Resource Type XML Response:

.. code:: xml

    <emailAddressesResponse>
     <Status>Success</Status>
     <Data xsi:type="emailAddressListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>2</ResultCount>
      <EmailAddress>
       <Id>6711</Id>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-12-22T15:56:36Z</DateAdded>
       <LastModified>2013-12-22T15:56:36Z</LastModified>
       <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/emailaddress.xhtml?emailaddress=test@example.com&amp;owner=Organization+Name</WebLink>
       <Address>test@example.com</Address>
      </EmailAddress>
      <EmailAddress>
       <Id>6575</Id>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-11-20T16:05:52Z</DateAdded>
       <LastModified>2013-11-20T16:05:52Z</LastModified>
       <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/emailaddress.xhtml?emailaddress=test@test.com&amp;owner=Organization+Name</WebLink>
       <Address>test@test.com</Address>
      </EmailAddress>
     </Data>
    </emailAddressesResponse>

The Indicators Service allows for the querying of a Collection of Email
Addresses for a user’s Organization, as well as any Communities to which
a user has access:

A list of Email Addresses from both the Groups and Tags Service, as
detailed in the table below, can be retrieved.

**Email Addresses Resource Type**

+------------------------------------------------------------------------+---------------+---------------------+
| Paths                                                                  | Owner Allowed | Pagination Required |
+========================================================================+===============+=====================+
| ``/v2/indicators/emailAddresses``                                      | TRUE          | TRUE                |
+------------------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/indicators/emailAddresses``             | FALSE         |                     |
+------------------------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/indicators/emailAddresses``                      | TRUE          |                     |
+------------------------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/indicators/emailAddresses`` | TRUE          |                     |
+------------------------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/indicators/emailAddresses``                         | FALSE         |                     |
+------------------------------------------------------------------------+---------------+---------------------+

emailAddress Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^^^

Example of an Indicators Service query for a Collection of Email
Addresses for a user's organization:

.. code::

    /v2/indicators/emailAddresses/test@example.com

Example of an Indicator Service query for a Collection of Email
Addresses to the Communities to which a user has access:

.. code::

    /v2/indicators/emailAddresses/test@example.com?owner=Common%20Community

emailAddress Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "emailAddress": {
       "id": 6575,
       "owner": {
        "id": 1,
        "name": "Organization Name",
        "type": "Organization"
       },
       "dateAdded": "2013-11-20T16:05:52Z",
       "lastModified": "2013-11-20T16:05:52Z",
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/emailaddress.xhtml?emailaddress=test@test.com&owner=Organization+Name",
       "address": "test@test.com"
      }
     }
    }

emailAddress Resource Type XML Response:

.. code:: xml

    <emailAddressResponse>
     <Status>Success</Status>
     <Data xsi:type="emailAddressResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <EmailAddress>
       <Id>6575</Id>
       <Owner xsi:type="organization">
        <Id>1</Id>
        <Name>Organization Name</Name>
        <Type>Organization</Type>
       </Owner>
       <DateAdded>2013-11-20T16:05:52Z</DateAdded>
       <LastModified>2013-11-20T16:05:52Z</LastModified>
       <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/emailaddress.xhtml?emailaddress=test@test.com&amp;owner=Organization+Name</WebLink>
       <Address>test@test.com</Address>
      </EmailAddress>
     </Data>
    </emailAddressResponse>

The Indicators Service allows for the querying of a specific Email
Address for a user’s Organization, as well as any Communities to which a
user has access:

**emailAddress Resource Type**

+---------------------------------------------------+---------------+---------------------+
| Paths                                             | Owner Allowed | Pagination Required |
+===================================================+===============+=====================+
| ``/v2/indicators/emailAddresses/{email address}`` | TRUE          | FALSE               |
+---------------------------------------------------+---------------+---------------------+

For each Email Address, its Attributes, associated Groups, Tags,
Security Labels , Victims , Victim Assets , and available Owners can be
retrieved.

urls Resource Type
^^^^^^^^^^^^^^^^^^

Indicator Service query for a Collection of URLs from a user's
Organization:

.. code::

    /v2/indicators/urls?resultStart=0&resultLimit=20

Indicator Service query for a Collection of URLs from a user's
Organization:

.. code::

    /v2/indicators/urls?owner=Common%20Community&resultStart=0&resultLimit=20

urls Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 2,
      "url": [{
       "id": 6712,
       "ownerName": "Organization Name",
       "dateAdded": "2013-12-22T16:08:21Z",
       "lastModified": "2013-12-22T16:08:21Z",
       "webLink": "https://demo.threatconnect.com/tc/auth/indicators/details/url.xhtml?url=http%3A%2F%2Fexample.com%2Fsomepath&owner=Organization+Name",
       "text": "http://example.com/somepath"
      }, {
       "id": 6576,
       "ownerName": "Organization Name",
       "dateAdded": "2013-11-20T16:07:17Z",
       "lastModified": "2013-11-20T16:07:17Z",
       "webLink": "https://demo.threatconnect.com/tc/auth/indicators/details/url.xhtml?url=http%3A%2F%2Ftest.com&owner=Organization+Name",
       "text": "http://test.com"
      }]
     }
    }

urls Resource Type XML Response:

.. code:: xml

    <urlsResponse>
     <Status>Success</Status>
     <Data xsi:type="urlListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>2</ResultCount>
      <Url>
       <Id>6712</Id>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-12-22T16:08:21Z</DateAdded>
       <LastModified>2013-12-22T16:08:21Z</LastModified>
       <WebLink>https://demo.threatconnect.com/tc/auth/indicators/details/url.xhtml?url=http%3A%2F%2Fexample.com%2Fsomepath&amp;owner=Organization+Name</WebLink>
       <Text>http://example.com/somepath</Text>
      </Url>
      <Url>
       <Id>6576</Id>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-11-20T16:07:17Z</DateAdded>
       <LastModified>2013-11-20T16:07:17Z</LastModified>
       <WebLink>https://demo.threatconnect.com/tc/auth/indicators/details/url.xhtml?url=http%3A%2F%2Ftest.com&amp;owner=Organization+Name</WebLink>
       <Text>http://test.com</Text>
      </Url>
     </Data>
    </urlsResponse>

The Indicators Service allows for the querying of a Collection of URLs
for a user’s Organization, as well as any Communities to which a user
has access:

A list of URLs from both the Groups and Tags Service, as detailed in the table below, can be retrieved.

**urls Resource Type**

+--------------------------------------------------------------+---------------+---------------------+
| Paths                                                        | Owner Allowed | Pagination Required |
+==============================================================+===============+=====================+
| ``/v2/indicators/urls``                                      | TRUE          | TRUE                |
+--------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/indicators/urls``             | FALSE         |                     |
+--------------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/indicators/urls``                      | TRUE          |                     |
+--------------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/indicators/urls`` | TRUE          |                     |
+--------------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/indicators/urls``                         | FALSE         |                     |
+--------------------------------------------------------------+---------------+---------------------+

url Resource Type
^^^^^^^^^^^^^^^^^

Indicator Service query for a Collection of URLs from a user's
Organization:

.. code::

    /v2/indicators/urls/http%3A%2F%2Ftest.com

Indicator Service query for a Collection of URLs from a user's
Organization:

.. code::

    /v2/indicators/urls/http%3A%2F%2Ftest.com?owner=Common%20Community

url Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "url": {
       "id": 6576,
       "owner": {
        "id": 1,
        "name": "Organization Name",
        "type": "Organization"
       },
       "dateAdded": "2013-11-20T16:07:17Z",
       "lastModified": "2013-11-20T16:07:17Z",
       "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/url.xhtml?url=http://test.com&owner=Organization+Name",
       "text": "http://test.com"
      }
     }
    }

url Resource Type XML Response:

.. code:: xml

    <urlResponse>
     <Status>Success</Status>
     <Data xsi:type="urlResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Url>
       <Id>6576</Id>
       <Owner xsi:type="organization">
        <Id>1</Id>
        <Name>Organization Name</Name>
        <Type>Organization</Type>
       </Owner>
       <DateAdded>2013-11-20T16:07:17Z</DateAdded>
       <LastModified>2013-11-20T16:07:17Z</LastModified>
       <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/url.xhtml?url=http://test.com&amp;owner=Organization+Name</WebLink>
       <Text>http://test.com</Text>
      </Url>
     </Data>
    </urlResponse>

The Indicators Service allows for the querying of a specific URL for a
user’s Organization, as well as any Communities to which a user has
access:

**URL Resource Type**

+-------------------------------+---------------+---------------------+
| Paths                         | Owner Allowed | Pagination Required |
+===============================+===============+=====================+
| ``/v2/indicators/urls/{url}`` | TRUE          | FALSE               |
+-------------------------------+---------------+---------------------+

For each URL, its Attributes, associated Groups, Tags, Security Labels ,
Victims , Victim Assets , and available Owners can be retrieved.

Custom Indicator Types
^^^^^^^^^^^^^^^^^^^^^^

It is possible to create custom Indicator types in ThreatConnect. To
find the available custom Indicator types and their respective
endpoints, refer to the `Indicator
Type <http://docs.threatconnect.com/#indicator-types>`__ branch.

Observations
~~~~~~~~~~~~

Show total number of observations for a given Indicator (with
timestamps)

``GET /v2/indicators/{indicator type}/{indicator}/observations``

Response data (note: if ``resultCount`` is 0 there are no observations
and response[data][observation] will be an empty list):

.. code:: json

    {
      "status" : "Success",
      "data" : {
        "resultCount" : 2,
        "observation" : [ {
          "count" : 5,
          "dateObserved" : "2016-03-18T10:04:31-04:00"
        }, {
          "count" : 7,
          "dateObserved" : "2016-03-18T10:15:13-04:00"
        } ]
      }
    }

Show full details of observations for a given Indicator

``GET /v2/indicators/{indicator type}/{indicator}/observations?includeAdditional=true``

Response data:

.. code:: json

    {
      "status" : "Success",
      "data" : {
        "host" : {
          "id" : 1,
          "owner" : {
            "id" : 2,
            "name" : "Acme",
            "type" : "Organization"
          },
          "dateAdded" : "2016-02-14T17:50:25-05:00",
          "lastModified" : "2016-02-13T17:50:25-05:00",
          "webLink" : "https://……..",
          "observationCount" : 5,
          "lastObserved" : "2016-02-13T11:28:23-05:00",
          "falsePositiveCount" : 1,
          "falsePositiveLastReported" : "2016-02-16T00:00:00-05:00",
          "hostName" : "….",
          "dnsActive" : "false",
          "whoisActive" : "false"
        }
      }
    }

Update the observation count for a given Indicator in your Organization

.. code::

    POST /v2/indicators/[IndicatorType]/[IndicatorName]/observations

    {
    "count" : 10
    }

Update the observation count for a given Indicator `in a Community or
Source you have access
to <http://docs.threatconnect.com/#owners-service>`__

.. code::

    POST /v2/indicators/[IndicatorType]/[IndicatorName]/observations?owner=[owner_name]

    {
    "count" : 10
    }

Observations are reported via the API for a particular Indicator.

To add Observation data to the generic Indicators Resource Type response
format, append the includeAdditional flag. and set it to ‘true’ in the
query portion of the URL. By default, the includeAdditional flag is set
to ‘false’. The includeAdditional field accepts ‘true’ or ‘false’.

When an API user issues a POST to the /observations branch of the API,
if an observation record already exists it will add the new Observation
count to the existing one. If it does not find a record, then it will
create a new Observation. No entity is returned to the API user—only a
204 response, if successful.

Recent Observations
^^^^^^^^^^^^^^^^^^^

As of ThreatConnect 5.0, the API branch below provides the ten Indicators with the most observations since a given date. If no date is given, the default query returns the ten Indicators which have had the most observations over the past day. In this context, a “day” includes all of the previous day and all data from the current day up to the current moment in time.

.. code::

    GET /v2/indicators/observed

To view Indicators with the most observations since a specific date, use the `dateObserved` parameter, as demonstrated below:

.. code::

    GET /v2/indicators/observed?dateObserved=2017-01-13

This request will return the following data:

.. code-block:: json

    {
      "status": "Success",
      "data": {
        "resultCount": 2,
        "indicator": [
          {
            "summary": "192.168.0.1",
            "userObservedList": [
              {
                "userName": "12345678901234567890",
                "count": 12
              }
            ]
          },
          {
            "summary": "example.com",
            "userObservedList": [
              {
                "userName": "12345678901234567890",
                "count": 2
              }
            ]
          }
        ]
      }
    }

.. note:: Only observations reported using API accounts that are configured to be included in Observations and False Positives will show up in the list of recent observations. For more details on how to configure an API account in this way, refer to the knowledge base article `here <http://kb.threatconnect.com/customer/en/portal/articles/2324809-reporting-false-positives>`_.

False Positives
~~~~~~~~~~~~~~~

Report a given Indicator as a False Positive:

.. code::

    POST v2/indicators/[IndicatorType]/[IndicatorName]/falsePositive

Sample query with includeAdditional flag (e.g.
/v2/indicators/[IndicatorType]/[IndicatorName]?includeAdditional=true):

.. code:: json

    {
      "status" : "Success",
      "data" : {
        "host" : {
          "id" : 1,
          "owner" : {
            "id" : 2,
            "name" : "Acme",
            "type" : "Organization"
          },
          "dateAdded" : "2016-02-21T17:50:25-05:00",
          "lastModified" : "2016-02-21T17:50:25-05:00",
          "webLink" : "https://……..",
          "observationCount" : 5,
          "lastObserved" : "2016-02-24T11:28:23-05:00",
          "falsePositiveCount" : 1,
          "falsePositiveLastReported" : "2016-02-25T00:00:00-05:00",
          "hostName" : "….",
          "dnsActive" : "false",
          "whoisActive" : "false"
        }
      }
    }

Sample Query without includeAdditional flag (e.g.
v2/indicators/[IndicatorType]/[IndicatorName]):

.. code:: json

    {
      "status" : "Success",
      "data" : {
        "host" : {
          "id" : 1,
          "owner" : {
            "id" : 2,
            "name" : "Acme",
            "type" : "Organization"
          },
          "dateAdded" : "2016-02-22T17:50:25-05:00",
          "lastModified" : "2016-02-22T17:50:25-05:00",
          "webLink" : "https://……..",
          "hostName" : "….",
          "dnsActive" : "false",
          "whoisActive" : "false"
        }
      }
    }

The API provides a mechanism for reporting False Positives. When
submitting a PUT or POST to a specific Indicator, the falsePositive flag
can be included as a field within the Indicator object. This will be a
Boolean field of either ‘true’ or ‘false’.

Within the API, Indicator entities only return the falsePositiveCount
and falsePositiveLastReported dates when the includeAdditional flag is
set to ‘true’.

ThreatAssess
~~~~~~~~~~~~

ThreatAsses Score JSON Response:

.. code:: json

    {
     "address": {
      "id": 73011,
      "owner": {
       "id": 631,
       "name": "Common Community",
       "type": "Community"
      },
      "dateAdded": "2013-07-27T22:14:56Z",
      "lastModified": "2013-07-27T22:14:56Z",
      "rating": 4.0,
      "confidence": 100,
      "threatAssessRating": 4.02,
      "threatAssessConfidence": 99.75,
      "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/address.xhtml?address=192.168.0.1",
      "ip": "192.168.0.1"
     }
    }

ThreatAsses Score XML Response:

.. code:: xml

    <Address>
    <Id>73011</Id>
    <Owner xsi:type="community">
    <Id>631</Id>
    <Name>Common Community</Name>
    <Type>Community</Type>
    </Owner>
    <DateAdded>2013-07-27T22:14:56Z</DateAdded>
    <LastModified>2013-07-27T22:14:56Z</LastModified>
    <Rating>4.00</Rating>
    <Confidence>100</Confidence>
    <ThreatAssessRating>4.02</ThreatAssessRating>
    <ThreatAssessConfidence>99.75</ThreatAssessConfidence>
    <WebLink>https://app.threatconnect.com/tc/auth/indicators/details/address.xhtml?address=192.168.0.1 </WebLink>
    <Address>192.168.0.1</Address>
    </Address>

The ThreatConnect platform may or may not return fields associated to
the ThreatAssess feature when querying a specific Indicator, depending
on a number of variables: whether ThreatAssess is enabled, whether the
ThreatAssess background monitor has run against the Indicator, whether
the Indicator has been rated by appropriate owners, etc. However, the
nature of ThreatAssess, its configuration, and its capabilities are
outside the scope of this document.

If a ThreatAssess score is available for a queried Indicator, it will be
included, as shown to the right, for that indicator.

Bulk Indicator Reports
~~~~~~~~~~~~~~~~~~~~~~

If retrieving all of the Indicators and their entire context (i.e.,
tags, attributes, etc.) from a Source, then the above API calls can
become unwieldy and require a high volume of successive calls.
ThreatConnect can be configured to publish a daily bulk report of all
Indicators per Owner for Sources and Communities within the Graphical
User Interface (GUI). These reports can be accessed via the V2 API, and
users should contact their ThreatConnect System Administrator to enable
bulk reporting.

Checking the Status of Bulk Indicator Reports
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Example of verifying that a Community or Source has bulk-reporting
enabled:

.. code::

    GET /v2/indicators/bulk?owner=Demo+Customer+Community

Checking bulkStatus Object JSON Response:

.. code:: json

    {
     "bulkStatus": {
      "name": "Demo Customer Community",
      "csvEnabled": true,
      "jsonEnabled": true,
      "nextRun": "2015-03-27T05:00:00Z",
      "lastRun": "2015-03-26T19:06:53Z",
      "status": "Complete"
     }
    }

Checking bulkStatus Object XML Response:

.. code:: xml

    <BulkStatus>
     <Name>Demo Customer Community</Name>
     <CsvEnabled>true</CsvEnabled>
     <JsonEnabled>true</JsonEnabled>
     <NextRun>2015-03-27T05:00:00Z</NextRun>
     <LastRun>2015-03-26T19:06:53.344Z</LastRun>
     <Status>Complete</Status>
    </BulkStatus>

The response body will contain a bulkStatus object, which provides
details of the configuration for the bulk-reporting feature of this
Community or Source: - "name": The name of the Owner queried -
"csvEnabled": Whether the owner has enabled Comma Separated Values (CSV)
reports to be generated (true/false), thus determining if the respective
endpoint will yield data - "jsonEnabled": Whether the owner has enabled
JSON reports to be generated (true/false), thus determining if the
respective endpoint will yield data - "nextRun": The ISO 8601 time-stamp
representing when the report generator will run next - "lastRun": The
ISO 8601 time-stamp representing when the report generator was last run
- "status": A string representing the status of the most-recent report
job (Complete, Failure, etc.)

Retrieving Bulk Reports
^^^^^^^^^^^^^^^^^^^^^^^

Reports can be retrieved in JSON or CSV format. The JSON format will
contain additional context in a new format, including Attributes and
Tags, if relevant. CSV reports contain an Indicator, its Type, its
Threat Rating, and its Confidence value.

JSON Bulk Reports
'''''''''''''''''

Retrieving Bulk Reports JSON Response:

.. code:: json

    {
     "indicator": [{
        "id": 126650,
        "ownerName": "Demo Customer Community",
        "type": "Host",
        "dateAdded": "2013-11-15T21:32:39Z",
        "lastModified": "2015-03-13T06:22:03Z",
        "rating": 5.0,
        "confidence": 73,
        "threatAssessRating": 4.38,
        "threatAssessConfidence": 93.43,
        "webLink": "https://app.threatconnect.com/tc/auth/indicators/details/host.xhtml?host=example.com&owner=Demo+Customer+Community",
        "description": "This is probably a bad domain.",
        "summary": "example.com",
        "attribute": [{
         "id": 131253,
         "type": "Source",
         "dateAdded": "2013-11-15T21:32:40Z",
         "lastModified": "2013-11-15T21:32:40Z",
         "displayed": true,
         "value": "ThreatConnect Intelligence Research Team Enrichment"
        }, {
         "id": 149457,
         "type": "Description",
         "dateAdded": "2013-11-15T21:32:40Z",
         "lastModified": "2013-11-15T21:32:40Z",
         "displayed": true,
         "value": "This is probably a bad domain."
        }],
        "tag": [{
         "name": "China",
         "webLink": "https://app.threatconnect.com/tc/auth/tags/tag.xhtml?tag=China&owner=Demo Customer Community"
        }]
       }]
     }

To query for a JSON report, execute the following query and include the
Owner with to query. Note that the Owner must have JSON report
publication enabled.

In the example below, the JSON report is being downloaded for the Demo
Customer Community:

``GET /v2/indicators/bulk/json?owner=Demo+Customer+Community``

The API will return the latest version of the JSON report with a
content-type header of "application/json." The output is very similar to
that returned by the Indicators Collection (e.g., in /v2/indicators),
with the addition of Attributes and Tags where relevant. The example
below displays a fully populated Indicator Object from the JSON report.
New fields have been placed in bold type for emphasis, and the list has
been truncated for brevity.

CSV Bulk Reports
''''''''''''''''

Example of a CSV report being downloaded for the Demo Customer
Community:

.. code::

    GET /v2/indicators/bulk/csv?owner=Demo+Customer+Community

The example below displays the output from a CSV report:

.. code::

    Type,Value,Rating,Confidence
    Host,example.com,null,null
    Address,192.168.31.136,3.00,0
    File,ABCDE123456804A61F2A704811F51BC,3.00,55
    URL,http://www.example.com/malware.exe,null,0
    EmailAddress,spearphisher@example.com,3.00,62

To query for a CSV report, execute the query below, and include the
Owner to be queried. Note that the owner must have CSV Report
publication enabled.

The API will return the latest CSV report with a content-type header of
"text/csv." The report will contain all of the Indicators in that Owner
and their Indicator Type. It will also include each Indicator’s Threat
Rating and Confidence value, if set, or null otherwise.

Working with Groups
~~~~~~~~~~~~~~~~~~~

Groups Service Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Example of an Groups Service query for a generic Collection of Groups
Resources for a user’s Organization:

.. code::

    /v2/groups?resultStart=0&resultLimit=20

Example of an Groups Service query for a generic Collection of Groups
Resources to the Communities to which a user has access:

.. code::

    /v2/groups?owner=Common%20Community&resultStart=0&resultLimit=20

Generic Groups Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 4,
      "group": [{
       "id": 3094,
       "name": "Incident 1",
       "type": "Incident",
       "ownerName": "Organization Name",
       "dateAdded": "2013-11-20T18:15:49Z",
       "webLink": "https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=3094"
      }, {
       "id": 3095,
       "name": "Threat 1",
       "type": "Threat",
       "ownerName": "Organization Name",
       "dateAdded": "2013-11-20T18:18:32Z",
       "webLink": "https://app.threatconnect.com/tc/auth/threat/threat.xhtml?threat=3095"
      }]
     }
    }

Generic Groups Resource Type XML Response:

.. code:: xml

    <groupsResponse>
     <Status>Success</Status>
     <Data xsi:type="groupListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>4</ResultCount>
      <Group>
       <Id>3094</Id>
       <Name>Incident 1</Name>
       <Type>Incident</Type>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-11-20T18:15:49Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=3094</WebLink>
      </Group>
      <Group>
       <Id>3095</Id>
       <Name>Threat 1</Name>
       <Type>Threat</Type>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-11-20T18:18:32Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/threat/threat.xhtml?threat=3095</WebLink>
      </Group>
     </Data>
    </groupsResponse>

A list of Groups from both the Indicators and Tags Service, as detailed in the table below, can be retrieved.

**Groups Resource Type**

+--------------------------------------------------------+---------------+---------------------+
| Paths                                                  | Owner Allowed | Pagination Required |
+========================================================+===============+=====================+
| ``/v2/groups``                                         | TRUE          | TRUE                |
+--------------------------------------------------------+---------------+---------------------+
| ``/v2/indicators/{indicator type}/{indicator}/groups`` |               |                     |
+--------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/groups``                         |               |                     |
+--------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/groups``    |               |                     |
+--------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/groups``                |               |                     |
+--------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/groups``                            |               |                     |
+--------------------------------------------------------+---------------+---------------------+

From the Groups Service, a query can be made for specific Group
Collection types such as Threats, Incidents, etc.

Campaigns Resource Type
^^^^^^^^^^^^^^^^^^^^^^^

Example of an Groups Service query for a generic Collection of Campaigns
for a user’s Organization:

.. code::

    /v2/groups/campaigns?resultStart=0&resultLimit=20

Example of an Groups Service query for a generic Collection of Campaigns
in the Common Community:

.. code::

    /v2/groups/campaigns?owner=Common%20Community&resultStart=0&resultLimit=20

Example of a Group Service query of a specific Campaign:

.. code::

    /v2/groups/campaigns/3094

As of ThreatConnect 5.0, Campaign objects have been added to the data
model and are available via the API. More documentation is coming soon.

Campaign Resource Type
^^^^^^^^^^^^^^^^^^^^^^

More documentation is coming soon.

Incidents Resource Type
^^^^^^^^^^^^^^^^^^^^^^^

Example of an Groups Service query for a generic Collection of Incidents
for a user’s Organization:

.. code::

    /v2/groups/incidents?resultStart=0&resultLimit=20

Example of an Groups Service query for a generic Collection of Incidents
to the Communities to which a user has access:

.. code::

    /v2/groups/incidents?owner=Common%20Community&resultStart=0&resultLimit=20

Example of a Group Service query of a specific Incident for a user’s
Organization:

.. code::

    /v2/groups/incidents/3094

Incidents Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 2,
      "incident": [{
       "id": 3094,
       "name": "Incident 1",
       "ownerName": "Organization Name",
       "dateAdded": "2013-11-20T18:15:49Z",
       "webLink": "https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=3094",
       "eventDate": "2013-11-04T00:00:00Z"
      }, {
       "id": 3103,
       "name": "Incident 2",
       "ownerName": "Organization Name",
       "dateAdded": "2013-12-22T17:49:26Z",
       "webLink": "https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=3103",
       "eventDate": null
      }]
     }
    }

Incidents Resource Type XML Response:

.. code:: xml

    <incidentsResponse>
     <Status>Success</Status>
     <Data xsi:type="incidentListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>2</ResultCount>
      <Incident>
       <Id>3094</Id>
       <Name>Incident 1</Name>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-11-20T18:15:49Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=3094</WebLink>
       <EventDate>2013-11-04T00:00:00Z</EventDate>
      </Incident>
      <Incident>
       <Id>3103</Id>
       <Name>Incident 2</Name>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-12-22T17:49:26Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=3103</WebLink>
      </Incident>
     </Data>
    </incidentsResponse>

A list of Incidents from both the Indicators and Tags Service, as detailed in the table below, can be retrieved.

**Incidents Resource Type**

+------------------------------------------------------------------+---------------+---------------------+
| Paths                                                            | Owner Allowed | Pagination Required |
+==================================================================+===============+=====================+
| ``/v2/groups/incidents``                                         | TRUE          | TRUE                |
+------------------------------------------------------------------+---------------+---------------------+
| ``/v2/indicators/{indicator type}/{indicator}/groups/incidents`` |               |                     |
+------------------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/groups/incidents``                         |               |                     |
+------------------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/groups/incidents``    |               |                     |
+------------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/groups/incidents``                |               |                     |
+------------------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/groups/incidents``                            |               |                     |
+------------------------------------------------------------------+---------------+---------------------+

The Groups service allows for the querying of a specific Incident for a
user’s Organization, as well as any Communities to which a user has
access:

Incident Resource Type
^^^^^^^^^^^^^^^^^^^^^^

Incident Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "incident": {
       "id": 3094,
       "name": "Incident 1",
       "owner": {
        "id": 1,
        "name": "Organization Name",
        "type": "Organization"
       },
       "dateAdded": "2013-11-20T18:15:49Z",
       "webLink": "https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=3094",
       "eventDate": "2013-11-04T00:00:00Z"
      }
     }
    }

Incident Resource Type XML Response:

.. code:: xml

    <incidentResponse>
     <Status>Success</Status>
     <Data xsi:type="incidentResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Incident>
       <Id>3094</Id>
       <Name>Incident 1</Name>
       <Owner xsi:type="organization">
        <Id>1</Id>
        <Name>Organization Name</Name>
        <Type>Organization</Type>
       </Owner>
       <DateAdded>2013-11-20T18:15:49Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=3094</WebLink>
       <EventDate>2013-11-04T00:00:00Z</EventDate>
      </Incident>
     </Data>
    </incidentResponse>

Incident Resource Type JSON Response Including Incident Status:

.. code:: json

    {
     "status": "Success",
     "data": {
      "incident": {
       "id": 3094,
       "name": "Incident 1",
       "owner": {
        "id": 1,
        "name": "Organization Name",
        "type": "Organization"
       },
       "dateAdded": "2013-11-20T18:15:49Z",
       "webLink": "https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=3094",
       "eventDate": "2013-11-04T00:00:00Z",
       "status": "None"
      }
     }
    }

Incident Resource Type XML Response Including Incident Status:

.. code:: xml

    <incidentResponse>
     <Status>Success</Status>
     <Data xsi:type="incidentResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Incident>
       <Id>3094</Id>
       <Name>Incident 1</Name>
       <Owner xsi:type="organization">
        <Id>1</Id>
        <Name>Organization Name</Name>
        <Type>Organization</Type>
       </Owner>
       <DateAdded>2013-11-20T18:15:49Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=3094</WebLink>
       <EventDate>2013-11-04T00:00:00Z</EventDate>
       <Status>None</Status>
      </Incident>
     </Data>
    </incidentResponse>

**Incident Resource Type**

+------------------------------------------------------+---------------+---------------------+
| Paths                                                | Owner Allowed | Pagination Required |
+======================================================+===============+=====================+
| ``/v2/groups/incidents/{id}``                        | FALSE         | FALSE               |
+------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/incidents/{id}?includeAdditional=true`` | FALSE         | FALSE               |
+------------------------------------------------------+---------------+---------------------+

Adding the ‘includeAdditional’ parameter will return the same information as ``/v2/groups/incidents/{id}``, except that it will also include the Incident’s status.

For each Incident, its Attributes, associated Indicators, Security Labels, Victims, Victim Assets, and Tags can be retrieved.

Documents Resource Type
^^^^^^^^^^^^^^^^^^^^^^^

Example of an Groups Service query for a Collection of Documents for a
user's organization:

.. code::

    /v2/groups/documents?resultStart=0&resultLimit=20

Example of an Indicator Service query for a Collection of Documents to
the Communities to which a user has access:

.. code::

    /v2/groups/documents?owner=Common%20Community&resultStart=0&resultLimit=20

Example of the Documents Resource Type query of a specific Document
using the the Document’s unique ID:

.. code::

    /v2/groups/documents/734899

Documents Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 2,
      "document": [{
       "id": 734899,
       "name": "20030626 IIS Log",
       "ownerName": "Acme Corp",
       "dateAdded": "2015-03-13T18:10:57Z",
       "webLink": "https://app.threatconnect.com/tc/auth/document/document.xhtml?document=734899"
      }, {
       "id": 668959,
       "name": "20150115 Pcap",
       "ownerName": "Acme Corp",
       "dateAdded": "2015-01-16T19:07:31Z",
       "webLink": "https://app.threatconnect.com/tc/auth/document/document.xhtml?document=668959"
      }]
     }
    }

Documents Resource Type XML Response:

.. code:: xml

    <documentsResponse>
     <Status>Success</Status>
     <Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="documentListResponseData">
      <ResultCount>2</ResultCount>
      <Document>
       <Id>734899</Id>
       <Name>20030626 IIS Log</Name>
       <OwnerName>Acme Corp</OwnerName>
       <DateAdded>2015-03-13T18:10:57Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/document/document.xhtml?document=734899</WebLink>
      </Document>
      <Document>
       <Id>668959</Id>
       <Name>20150115 Pcap</Name>
       <OwnerName>Acme Corp</OwnerName>
       <DateAdded>2015-01-16T19:07:31Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/document/document.xhtml?document=668959</WebLink>
      </Document>
     </Data>
     <documentsResponse>

The Groups Service allows for the querying of a specific Document for a
user’s Organization, as well as any Communities to which a user has
access, using the Document’s unique ID.

A list of Documents from both the Indicators and Tags Service, as detailed in the table below, can be retrieved.

**Documents Resource Type**

+------------------------------------------------------------------+---------------+---------------------+
| Paths                                                            | Owner Allowed | Pagination Required |
+==================================================================+===============+=====================+
| ``/v2/groups/documents``                                         | TRUE          | TRUE                |
+------------------------------------------------------------------+---------------+---------------------+
| ``/v2/indicators/{indicator type}/{indicator}/groups/documents`` |               |                     |
+------------------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/groups/documents``                         |               |                     |
+------------------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/groups/documents``    |               |                     |
+------------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/groups/documents``                |               |                     |
+------------------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/groups/documents``                            |               |                     |
+------------------------------------------------------------------+---------------+---------------------+

Document Resource Type
^^^^^^^^^^^^^^^^^^^^^^

Document Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "document": {
       "id": 734899,
       "name": "20030626 IIS Log",
       "owner": {
        "id": 665,
        "name": "Acme Corp",
        "type": "Organization"
       },
       "dateAdded": "2015-03-13T18:10:57Z",
       "webLink": "https://app.threatconnect.com/tc/auth/document/document.xhtml?document=734899",
       "fileName": "20030626 IIS Logs.txt",
       "fileSize": 5979,
       "status": "Success"
      }
     }
    }

Document Resource Type XML Response:

.. code:: xml

    <documentResponse>
     <Status>Success</Status>
     <Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="documentResponseData">
      <Document>
       <Id>734899</Id>
       <Name>20030626 IIS Log</Name>
       <Owner xsi:type="organization">
        <Id>665</Id>
        <Name>Acme Corp</Name>
        <Type>Organization</Type>
       </Owner>
       <DateAdded>2015-03-13T18:10:57Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/document/document.xhtml?document=734899</WebLink>
       <fileName>20030626 IIS Logs.txt</fileName>
       <fileSize>5979</fileSize>
       <status>Success</status>
      </Document>
     </Data>
    </documentResponse>

**Document Resource Type**

+-------------------------------+---------------+---------------------+
| Paths                         | Owner Allowed | Pagination Required |
+===============================+===============+=====================+
| ``/v2/groups/documents/{id}`` | FALSE         | FALSE               |
+-------------------------------+---------------+---------------------+

Note that the data has a field named "Status" that denotes if the
document is still in the process of being uploaded and stored within
ThreatConnect.

For each Document, its Attributes, associated Indicators, Security
Labels, Victims, Victim Assets, and Tags can be retrieved.

Threats Resource Type
^^^^^^^^^^^^^^^^^^^^^

Example of an Groups Service query for a specific Threat for a user's
organization:

.. code::

    /v2/groups/threats?resultStart=0&resultLimit=20

Example of an Groups Service query for a specific Threat to the
Communities to which a user has access:

.. code::

    /v2/groups/threats?owner=Common%20Community&resultStart=0&resultLimit=20

Example of a Group Service query of a specific Threat:

.. code::

    /v2/groups/threats/3095

Threats Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 2,
      "threat": [{
       "id": 3095,
       "name": "Threat 1",
       "ownerName": "Organization Name",
       "dateAdded": "2013-11-20T18:18:32Z",
       "webLink": "https://app.threatconnect.com/tc/auth/threat/threat.xhtml?threat=3095"
      }, {
       "id": 3104,
       "name": "Threat 2",
       "ownerName": "Organization Name",
       "dateAdded": "2013-12-22T18:00:28Z",
       "webLink": "https://app.threatconnect.com/tc/auth/threat/threat.xhtml?threat=3104"
      }]
     }
    }

Threats Resource Type XML Response:

.. code:: xml

    <threatsResponse>
     <Status>Success</Status>
     <Data xsi:type="threatListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>2</ResultCount>
      <Threat>
       <Id>3095</Id>
       <Name>Threat 1</Name>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-11-20T18:18:32Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/threat/threat.xhtml?threat=3095</WebLink>
      </Threat>
      <Threat>
       <Id>3104</Id>
       <Name>Threat 2</Name>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-12-22T18:00:28Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/threat/threat.xhtml?threat=3104</WebLink>
      </Threat>
     </Data>
    </threatsResponse>

A list of Threats from both the Indicators and Tags Service, as detailed in the table below, can be retrieved.

**Threats Resource Type**

+----------------------------------------------------------------+---------------+---------------------+
| Paths                                                          | Owner Allowed | Pagination Required |
+================================================================+===============+=====================+
| ``/v2/groups/threats``                                         | TRUE          | TRUE                |
+----------------------------------------------------------------+---------------+---------------------+
| ``/v2/indicators/{indicator type}/{indicator}/groups/threats`` |               |                     |
+----------------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/groups/threats``                         |               |                     |
+----------------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/groups/threats``    |               |                     |
+----------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/groups/threats``                |               |                     |
+----------------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/groups/threats``                            |               |                     |
+----------------------------------------------------------------+---------------+---------------------+

The Groups Service allows for the querying of a specific Threat for a
user’s Organization, as well as any Communities to which a user has
access:

Threat Resource Type
^^^^^^^^^^^^^^^^^^^^

Threat Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "threat": {
       "id": 3095,
       "name": "Threat 1",
       "owner": {
        "id": 1,
        "name": "Organization Name",
        "type": "Organization"
       },
       "dateAdded": "2013-11-20T18:18:32Z",
       "webLink": "https://app.threatconnect.com/tc/auth/threat/threat.xhtml?threat=3095"
      }
     }
    }

Threat Resource Type XML Response:

.. code:: xml

    <threatResponse>
     <Status>Success</Status>
     <Data xsi:type="threatResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Threat>
       <Id>3095</Id>
       <Name>Threat 1</Name>
       <Owner xsi:type="organization">
        <Id>1</Id>
        <Name>Organization Name</Name>
        <Type>Organization</Type>
       </Owner>
       <DateAdded>2013-11-20T18:18:32Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/threat/threat.xhtml?threat=3095</WebLink>
      </Threat>
     </Data>
    </threatResponse>

**Threat Resource Type**

+-----------------------------+---------------+---------------------+
| Paths                       | Owner Allowed | Pagination Required |
+=============================+===============+=====================+
| ``/v2/groups/threats/{id}`` | FALSE         | FALSE               |
+-----------------------------+---------------+---------------------+

For each Threat, its Attributes, associated Indicators, Security Labels,
Victims, Victim Assets, and Tags can be retrieved.

Adversaries Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^^

Example of an Groups Service query for a Collection of Adversaries for a
user's organization:

.. code::

    /v2/groups/adversaries?resultStart=0&resultLimit=20

Example of an Groups Service query for a Collection of Adversaries to
the Communities to which a user has access:

.. code::

    /v2/groups/adversaries?owner=Common%20Community&resultStart=0&resultLimit=20

Example of a Group Service query for a specific Adversary within a
user's Organization:

.. code::

    /v2/groups/adversaries/3093

Adversaries Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 2,
      "adversary": [{
       "id": 3093,
       "name": "Adversary 1",
       "ownerName": "Organization Name",
       "dateAdded": "2013-11-20T01:23:21Z",
       "webLink": "https://app.threatconnect.com/tc/auth/adversary/adversary.xhtml?adversary=3093"
      }, {
       "id": 3105,
       "name": "Adversary 2",
       "ownerName": "Organization Name",
       "dateAdded": "2013-12-22T18:07:28Z",
       "webLink": "https://app.threatconnect.com/tc/auth/adversary/adversary.xhtml?adversary=3105"
      }]
     }
    }

Adversaries Resource Type XML Response:

.. code:: xml

    <adversariesResponse>
     <Status>Success</Status>
     <Data xsi:type="adversaryListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>2</ResultCount>
      <Adversary>
       <Id>3093</Id>
       <Name>Adversary 1</Name>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-11-20T01:23:21Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/adversary/adversary.xhtml?adversary=3093</WebLink>
      </Adversary>
      <Adversary>
       <Id>3105</Id>
       <Name>Adversary 2</Name>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-12-22T18:07:28Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/adversary/adversary.xhtml?adversary=3105</WebLink>
      </Adversary>
     </Data>
    </adversariesResponse>

The Groups Service allows for the querying of a Collection of
Adversaries for both a user’s Organization, as well as any Communities
to which a user has access.

A list of Adversaries from both the Indicators and Tags Service, as detailed in the table below, can be retrieved.

**Adversaries Resource Type**

+--------------------------------------------------------------------+---------------+---------------------+
| Paths                                                              | Owner Allowed | Pagination Required |
+====================================================================+===============+=====================+
| ``/v2/groups/adversaries``                                         | TRUE          | TRUE                |
+--------------------------------------------------------------------+---------------+---------------------+
| ``/v2/indicators/{indicator type}/{indicator}/groups/adversaries`` |               |                     |
+--------------------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/groups/adversaries``                         |               |                     |
+--------------------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/groups/adversaries``    |               |                     |
+--------------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/groups/adversaries``                |               |                     |
+--------------------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/groups/adversaries``                            |               |                     |
+--------------------------------------------------------------------+---------------+---------------------+

The Groups Service allows for the querying of a specific Adversary for a
user’s Organization, as well as any Communities to which a user has
access.

Adversary Resource Type
^^^^^^^^^^^^^^^^^^^^^^^

Adversary Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "adversary": {
       "id": 3093,
       "name": "Adversary 1",
       "owner": {
        "id": 1,
        "name": "Organization Name",
        "type": "Organization"
       },
       "dateAdded": "2013-11-20T01:23:21Z",
       "webLink": "https://app.threatconnect.com/tc/auth/adversary/adversary.xhtml?adversary=3093"
      }
     }
    }

Adversary Resource Type XML Response:

.. code:: xml

    <adversaryResponse>
     <Status>Success</Status>
     <Data xsi:type="adversaryResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Adversary>
       <Id>3093</Id>
       <Name>Adversary 1</Name>
       <Owner xsi:type="organization">
        <Id>1</Id>
        <Name>Organization Name</Name>
        <Type>Organization</Type>
       </Owner>
       <DateAdded>2013-11-20T01:23:21Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/adversary/adversary.xhtml?adversary=3093</WebLink>
      </Adversary>
     </Data>
    </adversaryResponse>

**Adversary Resource Type**

+---------------------------------+---------------+---------------------+
| Paths                           | Owner Allowed | Pagination Required |
+=================================+===============+=====================+
| ``/v2/groups/adversaries/{id}`` | FALSE         | FALSE               |
+---------------------------------+---------------+---------------------+

For each Adversary, its Attributes, associated Indicators, Security
Labels, Victims, Victim Assets, and Tags can be retrieved.

Adversary Assets
""""""""""""""""

In ThreatConnect version 5.2 it is possible to retrieve Adversary Assets. The following queries show the available branches related to Adversary Assets:

``GET /v2/groups/adversaries/{id}/adversaryAssets``
``GET /v2/groups/adversaries/{id}/adversaryAssets/handles``
``GET /v2/groups/adversaries/{id}/adversaryAssets/phoneNumbers``
``GET /v2/groups/adversaries/{id}/adversaryAssets/urls``
``GET /v2/groups/adversaries/{id}/adversaryAssets/handles/{assetId}``
``GET /v2/groups/adversaries/{id}/adversaryAssets/phoneNumbers/{assetId}``
``GET /v2/groups/adversaries/{id}/adversaryAssets/urls/{assetId}``

A request to ``GET /v2/groups/adversaries/{id}/adversaryAssets`` should return the following JSON response:

{
  "status": "Success",
  "data": {
    "resultCount": 4,
    "bucketAsset": [
      {
        "id": 12,
        "name": "Half-blood Prince",
        "type": "Handle",
        "webLink": "https://app.threatconnect.com/auth/adversary/adversary.xhtml?adversary=123456"
      },
      {
        "id": 15,
        "name": "18008675309",
        "type": "PhoneNumber",
        "webLink": "https://app.threatconnect.com/auth/adversary/adversary.xhtml?adversary=123456"
      },
      {
        "id": 13,
        "name": "18009876543",
        "type": "PhoneNumber",
        "webLink": "https://app.threatconnect.com/auth/adversary/adversary.xhtml?adversary=123456"
      },
      {
        "id": 14,
        "name": "htpp://facebook.com/HalfBloodPrince",
        "type": "URL",
        "webLink": "https://app.threatconnect.com/auth/adversary/adversary.xhtml?adversary=123456"
      }
    ]
  }
}

Emails Resource Type
^^^^^^^^^^^^^^^^^^^^

Example of an Groups Service query for a Collection of Emails for a
user's organization:

.. code::

    /v2/groups/emails?resultStart=0&resultLimit=20

Example of an Groups Service query for a Collection of Emails to the
Communities to which a user has access:

.. code::

    /v2/groups/emails?owner=Common%20Community&resultStart=0&resultLimit=20

Example of a Groups Service query of a specific Email:

``/v2/groups/emails/3108``

Emails Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 1,
      "email": [{
       "id": 3108,
       "name": "[ATTENTION]Mail System Update",
       "ownerName": "Organization Name",
       "dateAdded": "2013-12-22T18:29:37Z",
       "webLink": "https://app.threatconnect.com/tc/auth/email/email.xhtml?email=3108",
       "score": 0
      }]
     }
    }

Emails Resource Type XML Response:

.. code:: xml

    <emailsResponse>
     <Status>Success</Status>
     <Data xsi:type="emailListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>1</ResultCount>
      <Email>
       <Id>3108</Id>
       <Name>[ATTENTION]Mail System Update</Name>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-12-22T18:29:37Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/email/email.xhtml?email=3108</WebLink>
       <Score>0</Score>
      </Email>
     </Data>
    </emailsResponse>

The Groups Service allows for the querying of a Collection of Emails for
a user’s Organization, as well as any Communities to which a user has
access.

A list of Emails from both the Indicators and Tags Service, as detailed in the table below, can be retrieved.

**Email Resource Type**

+---------------------------------------------------------------+---------------+---------------------+
| Paths                                                         | Owner Allowed | Pagination Required |
+===============================================================+===============+=====================+
| ``/v2/groups/emails``                                         | TRUE          | TRUE                |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/indicators/{indicator type}/{indicator}/groups/emails`` |               |                     |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/groups/emails``                         |               |                     |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/groups/emails``    |               |                     |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/groups/emails``                |               |                     |
+---------------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/groups/emails``                            |               |                     |
+---------------------------------------------------------------+---------------+---------------------+

The Groups Service allows for the querying of a specific Email for a
user’s Organization, as well as any Communities to which a user has
access.

Email Resource Type
^^^^^^^^^^^^^^^^^^^

Email Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "email": {
       "id": 3108,
       "name": "[ATTENTION]Mail System Update",
       "owner": {
        "id": 1,
        "name": "Organization Name",
        "type": "Organization"
       },
       "dateAdded": "2013-12-22T18:29:37Z",
       "webLink": "https://app.threatconnect.com/tc/auth/email/email.xhtml?email=3108",
       "to": "",
       "from": "hostmaster@mail-linkedin.com",
       "subject": "[ATTENTION]Mail System Update",
       "score": 0,
       "header": " header content...",
       "body": "body content..."
      }
     }
    }

Email Resource Type XML Response:

.. code:: xml

    <emailResponse>
     <Status>Success</Status>
     <Data xsi:type="emailResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Email>
       <Id>3108</Id>
       <Name>[ATTENTION]Mail System Update</Name>
       <Owner xsi:type="organization">
        <Id>1</Id>
        <Name>Organization Name</Name>
        <Type>Organization</Type>
       </Owner>
       <DateAdded>2013-12-22T18:29:37Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/email/email.xhtml?email=3108</WebLink>
       <To />
       <From>hostmaster@mail-linkedin.com</From>
       <Subject>[ATTENTION]Mail System Update</Subject>
       <Score>0</Score>
       <Header>
        <![CDATA[header content]]>
       </Header>

       <Body>
        <![CDATA[body content]]>
       </Body>
      </Email>
     </Data>
    </emailResponse>

**Email Resource Type**

+----------------------------+---------------+---------------------+
| Paths                      | Owner Allowed | Pagination Required |
+============================+===============+=====================+
| ``/v2/groups/emails/{id}`` | FALSE         | FALSE               |
+----------------------------+---------------+---------------------+

Note that the "to" field may be empty if the field was not supplied when
the email was uploaded.

For each Email, its Attributes, associated Indicators, Security Labels ,
Victims , Victim Assets , and Tags can be retrieved.

Signatures Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^

Example of a Groups Service query for a Collection of Signatures for a
user's organization:

.. code::

    /v2/groups/signatures?resultStart=0&resultLimit=20

Example of a Groups Service query for a Collection of Signatures to the
Communities to which a user has access:

.. code::

    /v2/groups/signatures?owner=Common%20Community&resultStart=0&resultLimit=20

Example of a Groups Service allows for the querying of a specific
Signature:

.. code::

    /v2/groups/signatures/3106

Signatures Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 2,
      "signature": [{
       "id": 3106,
       "name": "Signature 1",
       "ownerName": "Organization Name",
       "dateAdded": "2013-12-22T18:13:23Z",
       "webLink": "https://app.threatconnect.com/tc/auth/signature/signature.xhtml?signature=3106",
       "fileType": "SNORT"
      }, {
       "id": 3107,
       "name": "Signature 2",
       "ownerName": "Organization Name",
       "dateAdded": "2013-12-22T18:13:47Z",
       "webLink": "https://app.threatconnect.com/tc/auth/signature/signature.xhtml?signature=3107",
       "fileType": "SNORT"
      }]
     }
    }

Signatures Resource Type XML Response:

.. code:: xml

    <signaturesResponse>
     <Status>Success</Status>
     <Data xsi:type="signatureListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>2</ResultCount>
      <Signature>
       <Id>3106</Id>
       <Name>Signature 1</Name>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-12-22T18:13:23Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/signature/signature.xhtml?signature=3106</WebLink>
       <fileType>SNORT</fileType>
      </Signature>
      <Signature>
       <Id>3107</Id>
       <Name>Signature 2</Name>
       <OwnerName>Organization Name</OwnerName>
       <DateAdded>2013-12-22T18:13:47Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/signature/signature.xhtml?signature=3107</WebLink>
       <fileType>SNORT</fileType>
      </Signature>
     </Data>
    </signaturesResponse>

The Groups Service allows for the querying of a Collection of Signatures
for a user’s Organization, as well as any Communities to which a user
has access.

A list of Signatures from both the Indicators and Tags service, as detailed in the table below, can be retrieved.

**Signatures Resource Type**

+-------------------------------------------------------------------+---------------+---------------------+
| Paths                                                             | Owner Allowed | Pagination Required |
+===================================================================+===============+=====================+
| ``/v2/groups/signatures``                                         | TRUE          | TRUE                |
+-------------------------------------------------------------------+---------------+---------------------+
| ``/v2/indicators/{indicator type}/{indicator}/groups/signatures`` |               |                     |
+-------------------------------------------------------------------+---------------+---------------------+
| ``/v2/tags/{tag name}/groups/signatures``                         |               |                     |
+-------------------------------------------------------------------+---------------+---------------------+
| ``/v2/securityLabels/{security label name}/groups/signatures``    |               |                     |
+-------------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/groups/signatures``                |               |                     |
+-------------------------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/groups/signatures``                            |               |                     |
+-------------------------------------------------------------------+---------------+---------------------+

The Groups Service allows for the querying of a specific Signature for a
user’s Organization, as well as any Communities to which a user has
access.

Signature Resource Type
^^^^^^^^^^^^^^^^^^^^^^^

For each Signature, the Signature content can be downloaded:

.. code::

    /v2/groups/signatures/3106/download

Signature Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "signature": {
       "id": 3106,
       "name": "Signature 1",
       "owner": {
        "id": 1,
        "name": "Organization Name",
        "type": "Organization"
       },
       "dateAdded": "2013-12-22T18:13:23Z",
       "webLink": "https://app.threatconnect.com/tc/auth/signature/signature.xhtml?signature=3106",
       "fileType": "SNORT",
       "fileName": "signature1.txt"
      }
     }
    }

Signature Resource Type XML Response:

.. code:: xml

    <signatureResponse>
     <Status>Success</Status>
     <Data xsi:type="signatureResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Signature>
       <Id>3106</Id>
       <Name>Signature 1</Name>
       <Owner xsi:type="organization">
        <Id>1</Id>
        <Name>Organization Name</Name>
        <Type>Organization</Type>
       </Owner>
       <DateAdded>2013-12-22T18:13:23Z</DateAdded>
       <WebLink>https://app.threatconnect.com/tc/auth/signature/signature.xhtml?signature=3106</WebLink>
       <fileType>SNORT</fileType>
       <fileName>signature1.txt</fileName>
      </Signature>
     </Data>
    </signatureResponse>

**Signature Resource Type**

+--------------------------------+---------------+---------------------+
| Paths                          | Owner Allowed | Pagination Required |
+================================+===============+=====================+
| ``/v2/groups/signatures/{id}`` | FALSE         | FALSE               |
+--------------------------------+---------------+---------------------+

For each Signature, the Signature content can be downloaded, and the
response format will mirror the content of the Signature upload.

For each Signature, its Attributes, associated Indicators, Security
Labels, Victims, Victim Assets, and Tags can be retrieved.

Working With Attributes
~~~~~~~~~~~~~~~~~~~~~~~

Attributes Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^

Example Attribute Paths:

.. code::

    /v2/groups/signatures/3106/attributes
    /v2/indicators/emailAddresses/test@example.com/attributes

Attributes Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 2,
      "attribute": [{
       "id": 11,
       "type": "Honeypot",
       "dateAdded": 1385406165000,
       "value": "Winnie the Poo's honeypot"
      }, {
       "id": 13,
       "type": "Malware Controller Availability",
       "dateAdded": 1385406214000,
       "value": "Underground malware control possible at target location."
      }]
     }
    }

Attributes Resource Type XML Response:

.. code:: xml

    <attributesResponse>
     <Status>Success</Status>
     <Data xsi:type="attributeListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>2</ResultCount>
      <Attribute>
       <Id>11</Id>
       <Type>Honeypot</Type>
       <Value>Winnie the Poo's honeypot</Value>
       <DateAdded>2013-11-25T14:02:45-05:00</DateAdded>
      </Attribute>
      <Attribute>
       <Id>13</Id>
       <Type>Malware Controller Availability</Type>
       <Value>Underground malware control possible at target location.</Value>
       <DateAdded>2013-11-25T14:03:34-05:00</DateAdded>
      </Attribute>
     </Data>
    </attributesResponse>

Attributes are extra metadata that can be added to Indicators and Groups
and are not retrieved as independent objects like Indicators and Groups.
They are always with another item, such as a Host or a Threat. To
retrieve a list of Attributes, append the Attributes path onto a
specific Indicator or Group.

A list of Attributes from both the Indicators and Groups Services, as detailed in the table below, can be retrieved.

**Attributes Resource Type**

+------------------------------------------------------------+---------------+---------------------+
| Paths                                                      | Owner Allowed | Pagination Required |
+============================================================+===============+=====================+
| ``/v2/indicators/{indicator type}/{indicator}/attributes`` | TRUE          | TRUE                |
+------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/attributes``                | FALSE         |                     |
+------------------------------------------------------------+---------------+---------------------+

Note that all relevant Security Labels for an Attribute can be queried.

Working With Associations
~~~~~~~~~~~~~~~~~~~~~~~~~

Retrieving Available Associations
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

To retrieve all of the available associations, use the following GET
request:

.. code::

    GET /v2/types/associationTypes/

To retrieve information about a specific association, use the following
GET request format:

.. code::

    GET /v2/types/associationTypes/{association_type_name}/

This GET request will return details about the "Adversary" association
type:

.. code::

    GET /v2/types/associationTypes/adversaries/Adversary/

All of the available associations can be viewed by making a ``GET``
request to ``/v2/types/associationTypes``. This will return the name of
the association and, if applicable, the Indicator/Group Resources
between which the association can be created. To get information about a
specific association, add the association type to the end of the query
above such as: ``/v2/types/associationTypes/{association_type_name}``.

Indicator to Indicator Associations
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

In ThreatConnect, some types of Indicators can be related with certain
other types. At a high level, there are two ways to relate Indicators
with one another:

1. **Association**

An association allows two Indicators of certain types to be related to
one another in the manner that Indicators can be associated to Groups.
Below is a list of the Indicator-to-Indicator associations possible in
the ThreatConnect Cloud, along with the Indicator types that can be
associated with one another using each association.

+-------------------------+---------------------------+--------------------------+
| Name                    | API Branch                | Indicators Associated    |
+=========================+===========================+==========================+
| Address to User Agent   | ``/addressToUserAgent``   | Address <-> User Agent   |
+-------------------------+---------------------------+--------------------------+
| ASN to Address          | ``/asnToAddress``         | ASN <-Address            |
+-------------------------+---------------------------+--------------------------+
| ASN to CIDR             | ``/asnToCidr``            | ASN <-> CIDR             |
+-------------------------+---------------------------+--------------------------+
| CIDR to Address         | ``/cidrToAddress``        | CIDR <-Address           |
+-------------------------+---------------------------+--------------------------+

To retrieve indicators associated with another indicator using a custom
association, use the following GET request format:

.. code::

    GET /v2/indicators/{indicator type}/{indicator}/associations/{association type}/indicators

Retrieve all of the CIDR indicators associated with an ASN:

.. code::

    GET /v2/indicators/asns/ASN12345/associations/asnToCidr/indicators

asnToCidr Associations retrieve JSON:

.. code:: json

    {
      "status": "Success",
      "data": {
        "resultCount": 1,
        "indicator": [
          {
            "id": 123456,
            "ownerName": "Organization Name",
            "type": "CIDR",
            "dateAdded": "2016-11-22T00:38:03Z",
            "lastModified": "2016-11-22T01:50:53Z",
            "rating": 1.00,
            "confidence": 100,
            "threatAssessRating": 1.0,
            "threatAssessConfidence": 100.0,
            "webLink": "https://app.threatconnect.com/auth/indicators/details/customIndicator.xhtml?id=123456&owner=Organization+Name",
            "summary": "192.168.0.1/24"
          }
        ]
      }
    }

asnToCidr Associations retrieve XML:

.. code:: xml

    <indicatorsResponse>
      <Status>Success</Status>
      <Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="indicatorListResponseData">
        <ResultCount>1</ResultCount>
        <Indicator>
          <Id>123456</Id>
          <OwnerName>Organization Name</OwnerName>
          <Type>CIDR</Type>
          <DateAdded>2016-11-22T00:38:03Z</DateAdded>
          <LastModified>2016-11-22T01:50:53Z</LastModified>
          <Rating>1.00</Rating>
          <Confidence>100</Confidence>
          <ThreatAssessRating>1.0</ThreatAssessRating>
          <ThreatAssessConfidence>100.0</ThreatAssessConfidence>
          <WebLink>https://app.threatconnect.com/auth/indicators/details/customIndicator.xhtml?id=123456&amp;owner=Organization+Name</WebLink>
          <Summary>192.168.0.1/24</Summary>
        </Indicator>
      </Data>
    </indicatorsResponse>

To create an association between two Indicators, use the following POST request format:

.. code::

    POST /v2/indicators/{indicator type}/{indicator}/associations/{association type}/indicators/{indicator type}/{indicator}

2. **File Action**

A file action adds one Indicator to the behavior graph of a file
Indicator. Below is a list of the file actions available in the
ThreatConnect Cloud, along with the Indicator type that can be related
via each file action.

+---------------------+--------------------+--------------------------------------+
| Name                | API Branch         | Indicator TypeAssociated with File   |
+=====================+====================+======================================+
| File Archive        | ``/archive``       | n/a                                  |
+---------------------+--------------------+--------------------------------------+
| File Drop           | ``/drop``          | n/a                                  |
+---------------------+--------------------+--------------------------------------+
| File Traffic        | ``/traffic``       | n/a                                  |
+---------------------+--------------------+--------------------------------------+
| File Mutex          | ``/mutex``         | Mutex                                |
+---------------------+--------------------+--------------------------------------+
| File Registry Key   | ``/registryKey``   | Registry Key                         |
+---------------------+--------------------+--------------------------------------+
| File User Agent     | ``/userAgent``     | User Agent                           |
+---------------------+--------------------+--------------------------------------+

To retrieve indicators associated with a file using a file action, use
the following GET request format:

.. code::

    GET /v2/indicators/files/{file hash}/actions/{file action}/indicators

Retrieve all of the indicators associated with the file using the mutex
file action:

.. code::

    GET /v2/indicators/files/8743b52063cd84097a65d1633f5c74f5/actions/mutex/indicators

Mutex file action retrieve JSON:

.. code:: json

    {
      "status": "Success",
      "data": {
        "resultCount": 2,
        "indicator": [
          {
            "id": 123456,
            "ownerName": "Organization Name",
            "type": "Mutex",
            "dateAdded": "2016-11-23T16:21:53Z",
            "lastModified": "2016-11-23T16:21:53Z",
            "threatAssessRating": 3.0,
            "threatAssessConfidence": 50.0,
            "webLink": "https://app.threatconnect.com/auth/indicators/details/customIndicator.xhtml?id=123456&owner=Organization+Name",
            "description": "Mutex for file with hash **8743b52063cd84097a65d1633f5c74f5**.",
            "summary": "50F163F13C2FF8FDB5262A672EB39B19"
          },
          {
            "id": 123457,
            "ownerName": "Organization Name",
            "type": "Mutex",
            "dateAdded": "2016-11-23T16:20:40Z",
            "lastModified": "2016-11-23T16:20:40Z",
            "threatAssessRating": 3.0,
            "threatAssessConfidence": 50.0,
            "webLink": "https://app.threatconnect.com/auth/indicators/details/customIndicator.xhtml?id=123457&owner=Organization+Name",
            "description": "Mutex for file with hash **8743b52063cd84097a65d1633f5c74f5**.",
            "summary": "CTF.TimListCache.FMPDefaultS-1-5-21-1547161642-507921405-839522115-1004MUTEX.DefaultS-1-5-21-1547161642-507921405-839522115-1004"
          }
        ]
      }
    }

Mutex file action retrieve XML:

.. code:: xml

    <indicatorsResponse>
      <Status>Success</Status>
      <Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="indicatorListResponseData">
        <ResultCount>2</ResultCount>
        <Indicator>
          <Id>123456</Id>
          <OwnerName>Organization Name</OwnerName>
          <Type>Mutex</Type>
          <DateAdded>2016-11-23T16:21:53Z</DateAdded>
          <LastModified>2016-11-23T16:21:53Z</LastModified>
          <ThreatAssessRating>3.0</ThreatAssessRating>
          <ThreatAssessConfidence>50.0</ThreatAssessConfidence>
          <WebLink>https://app.threatconnect.com/auth/indicators/details/customIndicator.xhtml?id=123456&amp;owner=Organization+Name</WebLink>
          <Description>Mutex for file with hash **8743b52063cd84097a65d1633f5c74f5**.</Description>
          <Summary>50F163F13C2FF8FDB5262A672EB39B19</Summary>
        </Indicator>
        <Indicator>
          <Id>123457</Id>
          <OwnerName>Organization Name</OwnerName>
          <Type>Mutex</Type>
          <DateAdded>2016-11-23T16:20:40Z</DateAdded>
          <LastModified>2016-11-23T16:20:40Z</LastModified>
          <ThreatAssessRating>3.0</ThreatAssessRating>
          <ThreatAssessConfidence>50.0</ThreatAssessConfidence>
          <WebLink>https://app.threatconnect.com/auth/indicators/details/customIndicator.xhtml?id=123457&amp;owner=Organization+Name</WebLink>
          <Description>Mutex for file with hash **8743b52063cd84097a65d1633f5c74f5**.</Description>
          <Summary>CTF.TimListCache.FMPDefaultS-1-5-21-1547161642-507921405-839522115-1004MUTEX.DefaultS-1-5-21-1547161642-507921405-839522115-1004</Summary>
        </Indicator>
      </Data>
    </indicatorsResponse>

To create an association between two Indicators using a file action, use the following POST request format:

.. code::

    POST /v2/indicators/files/{file hash}/actions/{file action}/indicators/{indicator type}/{indicator}

Working With Tags
~~~~~~~~~~~~~~~~~

Path for all Tags:

.. code::

    /v2/tags

All Tags, including the Tags with which an Indicator or Group has been
tagged, as well as the Indicators or Groups of a specific Tag for a
user’s Organization, as well as any Communities to which a user has
access, can be found with the Tag Service.

A list of Tags from both the Indicators and Groups Services can be retrieved as detailed in the table in the next section.

Tags Resource Type
^^^^^^^^^^^^^^^^^^

Tags Resource Type JSON Response:

Example Tags Service query of a specific Tag:

.. code::

    /v2/tags/tag%201

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 2,
      "tag": [{
       "name": "tag 1",
       "webLink": "https://app.threatconnect.com/tc/auth/tags/tag.xhtml?tag=tag1&owner=Organization+Name"
      }, {
       "name": "tag 2",
       "webLink": "https://app.threatconnect.com/tc/auth/tags/tag.xhtml?tag=tag2&owner=Organization+Name"
      }]
     }
    }

Tags Resource Type XML Response:

.. code:: xml

    <tagsResponse>
     <Status>Success</Status>
     <Data xsi:type="tagListResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <ResultCount>2</ResultCount>
      <Tag>
       <Name>tag 1</Name>
       <WebLink>https://app.threatconnect.com/tc/auth/tags/tag.xhtml?tag=tag1&amp;owner=Organization+Name</WebLink>
      </Tag>
      <Tag>
       <Name>tag 2</Name>
       <WebLink>https://app.threatconnect.com/tc/auth/tags/tag.xhtml?tag=tag2&amp;owner=Organization+Name</WebLink>
      </Tag>
     </Data>
    </tagsResponse>

**Tags Resource Type**

+------------------------------------------------------+---------------+---------------------+
| Paths                                                | Owner Allowed | Pagination Required |
+======================================================+===============+=====================+
| ``/v2/tags``                                         | TRUE          | TRUE                |
+------------------------------------------------------+---------------+---------------------+
| ``/v2/indicators/{indicator type}/{indicator}/tags`` | TRUE          |                     |
+------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/tags``                | FALSE         |                     |
+------------------------------------------------------+---------------+---------------------+

The Tags Service allows for the querying of a specific Tag for both a
user’s Organization, as well as any Communities to which the user has
access.

Tag Resource Type
^^^^^^^^^^^^^^^^^

Tag Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "tag": {
       "name": "tag 1",
       "webLink": "https://app.threatconnect.com/tc/auth/tags/tag.xhtml?tag=tag%201&owner=Organization+Name"
      }
     }
    }

Tag Resource Type XML Response:

.. code:: xml

    <tagResponse>
     <Status>Success</Status>
     <Data xsi:type="tagResponseData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <Tag>
       <Name>tag 1</Name>
       <WebLink>https://app.threatconnect.com/tc/auth/tags/tag.xhtml?tag=tag%201&amp;owner=Organization+Name</WebLink>
      </Tag>
     </Data>
    </tagResponse>

**Tag Resource Type**

+-------------------------+---------------+---------------------+
| Paths                   | Owner Allowed | Pagination Required |
+=========================+===============+=====================+
| ``/v2/tags/{tag name}`` | TRUE          | FALSE               |
+-------------------------+---------------+---------------------+

For each Tag, its associated Indicators and Groups can be found.

Working with Security Labels
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Path for all Security Labels:

.. code::

    /v2/securityLabels

All Security Labels, including the Security Labels that have been
applied to an Indicator or Group, the Indicators or Groups labeled with
a specific Security Label for both a user’s Organization, as well as any
Communities to which a user has access, can be found using the Security
Label Service.

As of ThreatConnect version 5.2, all Security Labels have a ``color`` field included in the response, providing the hexadecimal code used to represent the color of each Security Label. The JSON response from a query to ``GET /v2/securityLabels/`` is as follows:

.. code-block:: json

    {
      "status": "Success",
      "data": {
        "resultCount": 4,
        "securityLabel": [
          {
            "name": "TLP Amber",
            "description": "Recipients may only share TLP: AMBER information with members of their own organization who need to know, and only as widely as necessary to act on that information.",
            "dateAdded": "2014-09-24T15:34:51Z",
            "color": "E6EA3C"
          },
          {
            "name": "TLP Green",
            "description": "Recipients may share TLP: GREEN information with peers and partner organizations within their sector or community, but not via publicly accessible channels.",
            "dateAdded": "2014-09-24T15:34:37Z",
            "color": "2CD924"
          },
          {
            "name": "TLP Red",
            "description": "Recipients may not share TLP: RED information with any parties outside of the specific exchange, meeting, or conversation in which it is originally disclosed.",
            "dateAdded": "2014-09-24T15:35:27Z",
            "color": "FC1727"
          },
          {
            "name": "TLP White",
            "description": "TLP: WHITE information may be distributed without restriction, subject to copyright controls.",
            "dateAdded": "2014-09-24T15:34:12Z",
            "color": "FFFFFF"
          }
        ]
      }
    }

Security Labels Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Example The SecurityLabels Service query of a specific Security Label:

.. code::

    /v2/securityLabels/SECURITY%20LABEL%20NAME

SecurityLabels Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 1,
      "securityLabel": {
       "name": "SECURITY LABEL NAME"
      }
     }
    }

SecurityLabels Resource Type XML Response:

.. code:: xml

    <securityLabelsResponse>
     <Status>Success</Status>
     <Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="securityLabelListResponseData">
      <ResultCount>1</ResultCount>
      <SecurityLabel>
       <Name>SECURITY LABEL NAME</Name>
      </SecurityLabel>
     </Data>
    </securityLabelsResponse>

A list of Security Labels from the Indicator, Group, and Task Services, as detailed in the table below, can be retrieved.

**SecurityLabels Resource Type**

+--------------------------------------------------------------------------------+---------+------------+
| Paths                                                                          | Owner   | Pagination |
|                                                                                | Allowed | Required   |
+================================================================================+=========+============+
| ``/v2/securityLabels``                                                         | TRUE    | TRUE       |
+--------------------------------------------------------------------------------+---------+------------+
| ``/v2/indicators/{indicator type}/{indicator}/securityLabels``                 | TRUE    |            |
+--------------------------------------------------------------------------------+---------+------------+
| ``/v2/groups/{group type}/{id}/securityLabels``                                | FALSE   |            |
+--------------------------------------------------------------------------------+---------+------------+
| ``/v2/indicators/{indicator type}/{indicator}/attributes/{id}/securityLabels`` | TRUE    |            |
+--------------------------------------------------------------------------------+---------+------------+
| ``/v2/groups/{group type}/{id}/attributes/{id}/securityLabels``                | FALSE   |            |
+--------------------------------------------------------------------------------+---------+------------+
| ``/v2/tasks/{id}/securityLabels``                                              | TRUE    |            |
+--------------------------------------------------------------------------------+---------+------------+
| ``/v2/tasks/{id}/attributes/{id}/securityLabels``                              | TRUE    |            |
+--------------------------------------------------------------------------------+---------+------------+

The SecurityLabels Service allows for the querying of a specific
Security Label for a user’s Organization, as well as any Communities to
which the user has access.

Security Label Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

SecurityLabel Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "securityLabel": {
       "name": "SECURITY LABEL NAME"
      }
     }
    }

SecurityLabel Resource Type XML Response:

.. code:: xml

    <securityLabelResponse>
     <Status>Success</Status>
     <Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="securityLabelResponseData">
      <SecurityLabel>
       <Name>SECURITY LABEL NAME</Name>
      </SecurityLabel>
     </Data>
    </securityLabelResponse>

**SecurityLabel Resource Type**

+----------------------------------------------+---------------+---------------------+
| Paths                                        | Owner Allowed | Pagination Required |
+==============================================+===============+=====================+
| ``/v2/securityLabels/{security label name}`` | TRUE          | TRUE                |
+----------------------------------------------+---------------+---------------------+

For each SecurityLabel, its associated Indicators and Groups can be
found.

Working with Tasks
~~~~~~~~~~~~~~~~~~

Retrieve all Tasks that can be accessed by this API User

.. code::

    GET /v2/tasks

Tasks will be shown for the API user’s Organization and Communities that
they can access.

Retrieve a specific Task

.. code::

    GET /v2/tasks/{task_id}

Sample Response to GET /v2/tasks/599

.. code:: json

    {
        "status": "Success",
        "data": {
            "task": {
                "id": 599,
                "name": "Test Task",
                "owner": {
                    "id": 1,
                    "name": "System",
                    "type": "Organization"
                },
                "dateAdded": "2016-04-12T13:36:43-04:00",
                "webLink": "https://localhost:8443/auth/workflow/task.xhtml?task=599",
                "status": "In Progress",
                "escalated": false,
                "reminded": false,
                "overdue": false,
                "dueDate": "2016-04-12T13:36:53-04:00",
                "reminderDate": "2016-04-12T13:36:53-04:00",
                "escalationDate": "2016-04-12T13:36:53-04:00"
            }
        }
    }

Retrieve the list of people assigned to a specific Task

.. code::

    GET /v2/tasks/{task_id}/assignees

Retrieve the list of Escalatees ("people who will be notified when the
deadline passes") for a specific Task

.. code::

    GET /v2/tasks/{task_id}/escalatees

Create a new Task; Escalatees and Assignees may be a list of
``userName`` entries

.. code::

    POST /v2/tasks/
    {
      "name" : "Task Name",
      "escalatee" : { "userName" : "manager@threatconnect.com" },
      "assignee" : { "userName" : "worker@threatconnect.com"}
    }

Update the due date (a ``DateTime`` object) and description for a Task

.. code::

    POST /v2/tasks/{task_id}/attributes
    {
      "dueDate" : {"2016-03-20T13:36:53-04:00"}, 
      "description": {"A thing we need to do"}
    }

Multiple Assignees or Escalatees may be provided by adding additional
``username`` entries as a list.

Add the user denoted by ``username`` to the list of Escalatees

.. code::

    POST /v2/tasks/{task_id}/escalatees/{username}

Add the user denoted by ``username`` to the list of Assignees

.. code::

    POST /v2/tasks/{task_id}/assignees/{username}

Remove the user denoted by ``username`` from the list of Escalatees

.. code::

    DELETE /v2/tasks/{task_id}/escalatees/{username}

Remove the user denoted by ``username`` from the list of Assignees

.. code::

    DELETE /v2/tasks/{task_id}/assignees/{username}

Retrieve all Indicators associated with a specific Task

.. code::

    GET /v2/tasks/<task_id/indicators

A list of Indicators, Tags, and Security Labels that are related to each
Task may be listed by querying the `API endpoints for each type of
Indicator or Group <#resource-types>`__.

Victims Resource Type
^^^^^^^^^^^^^^^^^^^^^

Retrieve all Victims in a user’s Organization and in any Communities to
which a user has access.

.. code::

    /v2/victims

Victims Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "resultCount": 1,
      "victim": [{
       "id": 527,
       "name": "Example Victim",
       "org": "Demo Org",
       "suborg": "HR Department",
       "workLocation": "Washington D.C.",
       "nationality": "American",
       "webLink": "https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527"
      }]
     }
    }

Victims Resource Type XML Response:

.. code:: xml

    <victimsResponse>
     <Status>Success</Status>
     <Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="victimListResponseData">
      <ResultCount>1</ResultCount>
      <Victim>
       <Id>527</Id>
       <Name>Example Victim</Name>
       <Org>Test Org</Org>
       <Suborg>HR Department</Suborg>
       <WorkLocation>Washington D.C.</WorkLocation>
       <Nationality>American</Nationality>
       <WebLink>https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527</WebLink>
      </Victim>
     </Data>
     <statusCode>OK</statusCode>
    </victimsResponse>

A list of Victims from both the Indicators and Groups Services, as detailed in the table below, can be retrieved.

**Victims Resource Type**

+---------------------------------------------------------+---------------+---------------------+
| Paths                                                   | Owner Allowed | Pagination Required |
+=========================================================+===============+=====================+
| ``/v2/victims``                                         | TRUE          | TRUE                |
+---------------------------------------------------------+---------------+---------------------+
| ``/v2/indicators/{indicator type}/{indicator}/victims`` | TRUE          |                     |
+---------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/victims``                | FALSE         |                     |
+---------------------------------------------------------+---------------+---------------------+

The Victims Service allows for the querying of a specific Victim for the
user’s Organization, as well as any Communities to which the user has
access.

Victim Resource Type
^^^^^^^^^^^^^^^^^^^^

Retrieve a specific Victim by ID

.. code::

    /v2/groups/victims/{victim_ID}

Victim Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "victim": {
       "id": 527,
       "name": "Example Victim",
       "description": "This victim got hacked.",
       "org": "Test Org",
       "suborg": "HR Department",
       "workLocation": "Washington D.C.",
       "nationality": "American",
       "webLink": "https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527"
      }
     }
    }

Victim Resource Type XML Response:

.. code:: xml

    <victimResponse>
     <Status>Success</Status>
     <Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="victimResponseData">
      <Victim>
       <Id>527</Id>
       <Name>Example Victim</Name>
       <Description>This victim got hacked.</Description>
       <Org>Test Org</Org>
       <Suborg>HR Department</Suborg>
       <WorkLocation>Washington D.C.</WorkLocation>
       <Nationality>American</Nationality>
       <WebLink>https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527</WebLink>
      </Victim>
     </Data>
     <statusCode>OK</statusCode>
    </victimResponse>

**Victim Resource Type**

+----------------------+---------------+---------------------+
| Paths                | Owner Allowed | Pagination Required |
+======================+===============+=====================+
| ``/v2/victims/{id}`` | FALSE         | FALSE               |
+----------------------+---------------+---------------------+

For each Victim, its Attributes, associated Groups, Indicators, Tags,
and available Owners can be retrieved.

Victim Tags Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^^

View all Tags for a given Victim

.. code::

    GET /v2/victims/{victim_ID}/tags

View a specific Tag for a given Victim

.. code::

    GET /v2/victims/{victim_ID}/tags/{tag_name}

Add a Tag to a given Victim

.. code::

    POST /v2/victims/{victim_ID}/tags/{tag_name}

Remove a Tag from a given Victim

.. code::

    DELETE /v2/victims/{victim_ID}/tags/{tag_name}

Tags can be applied to Victims `in the same manner as other
objects <#working-with-tags>`__, allowing filtering and searching.

Victim Security Labels Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

View all Security Labels for a given Victim

.. code::

    GET /v2/victims/{victim_ID}/securityLabels

View a specific Security Label for a given Victim

.. code::

    GET /v2/victims/{victim_ID}/securityLabels/{security_label_name}

View all Victims for a given Security Label

.. code::

    GET /v2/victims/securityLabels/{security_label_name}/victims

Add a Security Labels to a given Victim

.. code::

    POST /v2/victims/{victim_ID}/securityLabels/{security_label_name}

Add a Victim to a given Security Label

.. code::

    POST /v2/victims/securityLabels/{security_label_name}/victims/{victim_ID}

Remove a Security Label from a given Victim

.. code::

    DELETE /v2/victims/{victim_ID}/securityLabels/{security_label_name}

Remove a Victim from a given Security Label

.. code::

    DELETE /v2/victims/securityLabels/{security_label_name}/victims/{victim_ID}

Security Labels can be applied to Victims `in the same manner as other
objects <#working-with-security-labels>`__, allowing access and sharing
restrictions.

Victim Attributes Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

View Victim Attributes for a given Victim

.. code::

    GET /v2/victims/{victim_ID}/attributes

View a specific Victim Attribute for a given Victim

.. code::

    GET /v2/victims/{victim_ID}/attributes/{attribute_ID}

View all Security Labels for a given Victim Attribute

.. code::

    GET /v2/victims/{victim_ID}/attributes/{attribute_ID}/securityLabels

View Security Label for a given Victim Attribute

.. code::

    GET /v2/victims/{victim_ID}/attributes/{attribute_ID}/securityLabels/{security_label_name}

Add an Attribute to a given Victim Attribute

.. code::

    POST /v2/victims/{victim_ID}/attributes

Add a Security Label to a given Victim Attribute

.. code::

    POST /v2/victims/{victim_ID}/attributes/{attribute_ID}/securityLabels/{security_label_name}

Update an Attribute on a given Victim Attribute

.. code::

    PUT /v2/victims/{victim_ID}/attributes/{attribute_ID}

Remove an Attribute from a given Victim Attribute

.. code::

    DELETE /v2/victims/{victim_ID}/attributes/{attribute_ID}

Remove a Security Label from a given Victim Attribute

.. code::

    DELETE /v2/victims/{victim_ID}/attributes/{attribute_ID}/securityLabels/{security_label_name}

Attributes can be added to Victims `in the same manner as other
objects <#attributes>`__, allowing enriched context.

Victim Assets Resource Type
^^^^^^^^^^^^^^^^^^^^^^^^^^^

VictimAssets Resource Type JSON Response:

.. code:: json

    {
     "status": "Success",
     "data": {
      "victimAsset": [{
       "id": 727,
       "name": "demo@victim.org",
       "type": "EmailAddress",
       "webLink": "https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527"
      }, {
       "id": 729,
       "name": "jbadguy",
       "type": "NetworkAccount",
       "webLink": "https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527"
      }, {
       "id": 731,
       "name": "555-867-5309",
       "type": "Phone",
       "webLink": "https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527"
      }, {
       "id": 728,
       "name": "@VictimGuy47",
       "type": "SocialNetwork",
       "webLink": "https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527"
      }, {
       "id": 730,
       "name": "www.joevictim.net",
       "type": "WebSite",
       "webLink": "https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527"
      }]
     }
    }

VictimAssets Resource Type XML Response:

.. code:: xml

    <victimAssetsResponse>
     <Status>Success</Status>
     <Data xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="victimAssetListResponseData">
      <VictimAsset>
       <Id>727</Id>
       <Name>demo@victim.org</Name>
       <Type>EmailAddress</Type>
       <WebLink>https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527</WebLink>
      </VictimAsset>
      <VictimAsset>
       <Id>729</Id>
       <Name>jbadguy</Name>
       <Type>NetworkAccount</Type>
       <WebLink>https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527</WebLink>
      </VictimAsset>
      <VictimAsset>
       <Id>731</Id>
       <Name>555-867-5309</Name>
       <Type>Phone</Type>
       <WebLink>https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527</WebLink>
      </VictimAsset>
      <VictimAsset>
       <Id>728</Id>
       <Name>@VictimGuy47</Name>
       <Type>SocialNetwork</Type>
       <WebLink>https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527</WebLink>
      </VictimAsset>
      <VictimAsset>
       <Id>730</Id>
       <Name>www.joevictim.net</Name>
       <Type>WebSite</Type>
       <WebLink>https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527</WebLink>
      </VictimAsset>
     </Data>
     <statusCode>OK</statusCode>
    </victimAssetsResponse>

Victim Assets can also be found by querying the victimAssets Collection.
The victimAssets Collection will return all Assets attached to a
specified Victim ID.

**VictimAssets Resource Type**

+--------------------------------------------------------------+---------------+---------------------+
| Paths                                                        | Owner Allowed | Pagination Required |
+==============================================================+===============+=====================+
| ``/v2/victims/{id}/victimAssets``                            | TRUE          | FALSE               |
+--------------------------------------------------------------+---------------+---------------------+
| ``/v2/groups/{group type}/{id}/victimAssets``                | TRUE          | FALSE               |
+--------------------------------------------------------------+---------------+---------------------+
| ``/v2/indicators/{indicator type}/{indicator}/victimAssets`` | TRUE          | FALSE               |
+--------------------------------------------------------------+---------------+---------------------+

As displayed in the table below, each specific type of Victim Asset can be queried.

**VictimAsset Types**

+---------------------------------------------------+---------------+---------------------+
| Paths                                             | Owner Allowed | Pagination Required |
+===================================================+===============+=====================+
| ``/v2/victims/{id}/victimAssets/emailAddresses``  | FALSE         | FALSE               |
+---------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/victimAssets/networkAccounts`` | FALSE         | FALSE               |
+---------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/victimAssets/phoneNumbers``    | FALSE         | FALSE               |
+---------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/victimAssets/socialNetworks``  | FALSE         | FALSE               |
+---------------------------------------------------+---------------+---------------------+
| ``/v2/victims/{id}/victimAssets/webSites``        | FALSE         | FALSE               |
+---------------------------------------------------+---------------+---------------------+

Sample query and response for emailAddress

.. code:: json

    {
     "id": 727,
     "type": "EmailAddress",
     "webLink": "https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527",
     "address": "demo@victim.org",
     "addressType": "Personal"
    }

.. code:: xml

    <VictimEmailAddress>
     <Id>727</Id>
     <Type>EmailAddress</Type>
     <WebLink>https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527</WebLink>
     <Address>demo@victim.org</Address>
     <AddressType>Personal</AddressType>
    </VictimEmailAddress>

Sample query and response for networkAccount

.. code:: json

     {
      "id": 729,
      "type": "NetworkAccount",
      "webLink": "https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527",
      "account": "jbadguy",
      "network": "victim.org domain"
     }

.. code:: xml

    <VictimNetworkAccount>
     <Id>729</Id>
     <Type>NetworkAccount</Type>
     <WebLink>https://app.threatconnect.com/tc /auth/victim/victim.xhtml?victim=527
     </WebLink>
     <Account>jbadguy</Account>
     <Network>victim.org domain</Network>
    </VictimNetworkAccount>

Sample query and response for "phoneType"

.. code:: json

     {
      "id": 731,
      "type": "Phone",
      "webLink": "https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527",
      "phoneType": "555-867-5309"
     }

.. code:: xml

    <VictimPhone>
     <Id>731</Id>
     <Type>Phone</Type>
     <WebLink>https://app.threatconnect.com/tc /auth/victim/victim.xhtml?victim=527
     </WebLink>
     <PhoneType>555-867-5309</PhoneType>
    </VictimPhone>        

Sample query and response for socialNetwork

.. code:: json

    {
     "id": 728,
     "type": "SocialNetwork",
     "webLink": "https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527",
     "account": "@VictimGuy47",
     "network": "Twitter"
    }

.. code:: xml

    <VictimSocialNetwork>
     <Id>728</Id>
     <Type>SocialNetwork</Type>
     <WebLink>https://app.threatconnect.com/tc /auth/victim/victim.xhtml?victim=527
     </WebLink>
     <Account>@VictimGuy47</Account>
     <Network>Twitter</Network>
    </VictimSocialNetwork>

Sample query and response for WebSite

.. code:: json

     {
      "id": 730,
      "type": "WebSite",
      "webLink": "https://app.threatconnect.com/tc/auth/victim/victim.xhtml?victim=527",
      "webSite": "www.joevictim.net"
     }

.. code:: xml

    <VictimWebSite>
     <Id>730</Id>
     <Type>WebSite</Type>
     <WebLink>https://app.threatconnect.com/tc /auth/victim/victim.xhtml?victim=527
     </WebLink>
     <WebSite>www.joevictim.net</WebSite>
    </VictimWebSite>    

Writing to the API
~~~~~~~~~~~~~~~~~~

Introduction

Version 2 of the ThreatConnect API allows for programmatic creation,
updating, and deleting of data within ThreatConnect, which includes
Indicators and Groups, their Attributes and Tags, and even Associations.
This section outlines the standards for managing these operations. Many
of the following examples for creating, updating, and deleting data will
use various HTTP methods. Please note that the authentication rules
detailed in the Calculating the Signature section still apply for these
additional methods. Thus, each of the requests listed below will require
time-stamp and authorization headers, which have been omitted from the
examples for brevity and readability.

Creating New Entities
^^^^^^^^^^^^^^^^^^^^^

Creation is handled in the V2 API via the HTTP POST method. This is done
by creating a body containing the entity’s information and attaching it
to a POST request to the relevant service. The body must be in valid
JSON or XML, with contents and format mimicking the data structure when
querying the API.

The example below displays an API call that creates a new IP address:

.. code::

    POST /v2/indicators/addresses
    Host: api.threatconnect.com
    Content-Type: application/json
    {
    "ip" : "192.168.1.100"
    "rating" : "5.0",
    "confidence" : 100
    }

The URL associated with the POST request contains the path that will
inform the V2 API of where the entity is to be created. In the example
above, it specifies that it would like to create an Indicator, or, more
specifically, an address. Note that the content-type header is
configured to application/json to inform the API that the body will be
in JSON format. The body of the POST request contains a simple JSON
object that specifies information about the entity. In this instance, it
creates the IP Address 192.168.1.100 with an Threat Rating of 5 and a
Confidence value of 100. For the sake of re-usability, these fields will
use the same names, values, and formats as those returned by the API
when trying to retrieve values.

Indicators
^^^^^^^^^^

The following are all considered valid paths for creating indicators:

.. code::

    POST /v2/indicators/addresses
    POST /v2/indicators/emailAddresses
    POST /v2/indicators/files
    POST /v2/indicators/hosts
    POST /v2/indicators/urls

Sample results for ``address`` query

.. code:: json

     {
      "ip": "192.168.0.1",
      "rating": "5.0",
      "confidence": 100
     }                                             

Sample results for ``emailAddresses`` query

.. code:: json

     {
      "address": "example@badguy.com",
      "rating": "5.0",
      "confidence": 100
     }                                              

Sample results for ``files`` query

.. code:: json

    {
     "md5": "2FFA00BB67FC936B01E3DE234A01A8D8",
     "sha1": "111EE6465425DF9A06CC14934DFFEE5EF36DE7E3",
     "sha256": "FD320CE6E64A816B3DC22DAE1AEA9B5D84       
     C197E1265AE3880B3A2A45A543D051 ",                     
     "size": 5366,
     "rating": "5.0",
     "confidence": 100
    }                                                                                

Sample results for ``hosts`` query

.. code:: json

    {
     "hostName": "badguy.com",
     "dnsActive": "false",
     "whoisActive": "true",
     "rating": "5.0",
     "confidence": 100
    }                                       

Sample results for ``urls`` query

.. code:: json

    {
     "text": "http://badguy.com/bad.php",
     "rating": "5.0",
     "confidence": 100
    }

The V2 API will allow for the programmatic creation of Indicators by
issuing POST requests with valid bodies to the appropriate resources.

Likewise, the table below illustrates valid fields for inclusion in the body of
the POST request when creating an Indicator.

+----------------+--------------+----------+
| Indicator Type | Valid Fields | Required |
+================+==============+==========+
| addresses      | ip           | TRUE     |
+----------------+--------------+----------+
|                | rating       | FALSE    |
+----------------+--------------+----------+
|                | confidence   | FALSE    |
+----------------+--------------+----------+
| emailAddresses | address      | TRUE     |
+----------------+--------------+----------+
|                | rating       | FALSE    |
+----------------+--------------+----------+
|                | confidence   | FALSE    |
+----------------+--------------+----------+
| files          | md5          | TRUE\*   |
+----------------+--------------+----------+
|                | sha1         | TRUE\*   |
+----------------+--------------+----------+
|                | sha256       | TRUE\*   |
+----------------+--------------+----------+
|                | size         | FALSE    |
+----------------+--------------+----------+
|                | rating       | FALSE    |
+----------------+--------------+----------+
|                | confidence   | FALSE    |
+----------------+--------------+----------+
| hosts          | hostName     | TRUE     |
+----------------+--------------+----------+
|                | dnsActive    | FALSE    |
+----------------+--------------+----------+
|                | whoisActive  | FALSE    |
+----------------+--------------+----------+
|                | rating       | FALSE    |
+----------------+--------------+----------+
|                | confidence   | FALSE    |
+----------------+--------------+----------+
| urls           | text         | TRUE     |
+----------------+--------------+----------+
|                | rating       | FALSE    |
+----------------+--------------+----------+
|                | confidence   | FALSE    |
+----------------+--------------+----------+

\*Files are required to be submitted with at least one valid hash.

Files
^^^^^

The file-occurrence object returned by the API details the structure
used to model the name, run path, and date for one observed occurrence
of this file:

.. code::

    "fileOccurence" : [ {
    "fileName" : "win999301.dll",
    "path" : "C:\\Windows\\System",
    "date" : "2014-11-03T00:00:00-05:00"
    }, {
    "fileName" : "win093023.dll",
    "path" : "C:\\Windows\\System32",
    "date" : "2014-11-06T00:00:00-05:00"
    } ]

Utilizing a pivot-like functionality, the API allows for the creation of
fileOccurrences by specifying a valid hash for an existing File
Indicator:

.. code::

    POST /v2/indicators/files
    Host: api.threatconnect.com
    Content-Type: application/json

    {
    "md5" : "BE7DE2F0CF48294400C714C9E28ECD01",
    "sha1" : "4067DF19928C00D521E5D14B851C88897EF40401",
    "sha256" : "EC6B6F2B4EF1A97F8C9751B4539A38ECE25BD2928497E44BB6A61829707DD301",
    "size" : 5566
    }

    POST /v2/indicators/files/BE7DE2F0CF48294400C714C9E28ECD01/fileOccurrences
    Host: api.threatconnect.com
    Content-Type: application/json

    {
    "fileName" : "win999301.dll",
    "path" : "C:\\Windows\\System",
    "date" : "2014-11-03T00:00:00-05:00"
    }

File Indicators are different from other Indicator types because they
can have any combination of multiple hashes, as well as file-specific
fields. When creating a file, specify any or all of these hashes just as
in the ThreatConnect web client, with at least one hash required. Note
that due to the complications surrounding possible collisions, there is
no option to add or remove these hash associations, as there is in the
GUI, after the file is created. Files also have additional data
structures to model instances of a file’s occurrences in the wild.

Groups
^^^^^^

For example, the following POST request would create a new Incident
named "Remote Access Incident" that occurred on October 20, 2014:

.. code::

    POST /v2/groups/incidents
    Host: api.threatconnect.com
    Content-Type: application/json
    {
    "name" : "Remote Access Incident",
    "eventDate" : "2014-10-20T00:00:00-04:00"
    }

This response will contain the newly created Group ID for future use,
just as if the Group had been queried for specifically:

.. code::

    HTTP/1.1 201 CREATED
    Content-Type: application/json
    {
    "status" : "Success",
    "data" : {
    "incident" : {
    "id" : 119842,
    "name" : "Remote Access Incident ",
    "owner" : {
    "id" : 1749,
    "name" : "Test Org",
    "type" : "Organization"
    },
    "dateAdded" : "2014-10-28T17:30:33-04:00",
    "webLink" : " https://app.threatconnect.com/tc/auth/incident/incident.xhtml?incident=119842",
    "eventDate" : "2014-10-20T00:00:00-04:00"
    }
    }
    }

Sample ``adversaries`` query output

.. code:: json

     {                                             
     "name" : "Baron von Badguy"                     
     }                                             

Adding Adversary Assets
"""""""""""""""""""""""

In ThreatConnect version 5.2, it is possible to create Adversary Assets. The general format for this request is as follows:

POST /v2/groups/adversaries/{id}/adversaryAssets/{assetType (plural)}
{
  "{assetType (singular)}": "{assetValue}"
}

In this format, the possible assetTypes are ``handles``, ``phoneNumbers``, and ``urls``. The following example would add the handle "Pierre Despereaux" to the Adversary with the given id:

POST /v2/groups/adversaries/{id}/adversaryAssets/handles
{
  "handle": "Pierre Despereaux"
}

This request should return the following JSON response:

{
  "status": "Success",
  "data": {
    "adversaryHandle": {
      "id": 16,
      "type": "Handle",
      "webLink": "https://app.threatconnect.com/auth/adversary/adversary.xhtml?adversary=123456",
      "handle": "Pierre Despereaux"
    }
  }
}

Documents
"""""""""

Sample ``documents`` query output

.. code:: json

     {                                             
                                                   
     "name" : "Example Report",                      
     "fileName" : "apt_report.pdf"                 
     }                                             

Sample ``emails`` query output

.. code:: json

    {
     "name": "Example Email",
     "to": "victim@helpless.net",
     "from": "badguy@badguy.net",
     "subject": "Your Paycheck.exe",
     "header": "Delivered-To: victim@helpless.net\n 
     Received: by 10.36.81.3 with SMTP id
     e3cs239nzb;Tue,
     29 Mar 2005 15: 11: 47 -
      0800(PST)\ nReturn - Path: \nReceived: from mail.emailprovider.com(mail.emailprovider.com[111.111.11.111])
     by mx.gmail.com with SMTP id 2005.03.
     29.15.11.46;Tue,
     29 Mar 2005 15: 11: 47 -
      0800(PST)\ nMessage - ID: 25.62086.mail@ mail.emailprovider.com > \nReceived: from[11.11.111.111] by mail.provider.
     com via HTTP;Tue,
     29 Mar 2005 15: 11: 45
     PST\ nDate: Tue,
     29 Mar 2005 15: 11: 45 -
      0800(PST)\ nFrom: Bad Guy\ nSubject: Your
     Paycheck.exe\ nTo: John Victim ",               
     "body": "Please open your paycheck at          
     www.badguy.net / johnvictim / paycheck.exe.
     "      
    }                              

Sample ``incidents`` query output

.. code:: json

     {                                             
     "name" : "Bad November Incident",               
     "eventDate" : "2014-11-04T12:40:53-05:00"       
     }                                             

Sample ``threats`` query output

.. code:: json

     {                                             
     "name" : "Example APT"                          
     }                                             

Sample ``signatures`` query output

.. code:: json

    {                                             
     "name" : "Bad Guy Detection Signature",         
     "fileName" : "example_sig.txt",                 
     "fileType" : "YARA",                            
     "fileText" : "\"rule example_sig : example\n{\n 
     meta:\n description = \"This                  
     is just an example\"\n\n                      
     strings:\n $a = {6A 40 68 00                  
     30 00 00 6A 14 8D 91}\n $b =                  
     {8D 4D B0 2B C1 83 C0 27 99 6A 4E             
     59 F7 F9}\n condition:\n                       
     $a or $b or $c\n}\""                          
    }                                             

Groups are different from Indicators, since they do not require unique
names; rather, the system assigns unique identifiers. As a result, the
Group is created with the relevant information, such as the name, and
the V2 API will return the newly created object, including its ID, for
future reference.

.. note:: The content’s variable names and values take the same form as those returned when polling for a specific Incident. The V2 ThreatConnect API maintains this congruency intentionally to make reusing values easier.

If created successfully, the V2 API will respond with a response
detailing the Group created.

The table below details the acceptable fields and values when creating a Group.

+-------------+--------------+----------+
| Group Type  | Valid Fields | Required |
+=============+==============+==========+
| adversaries | name         | TRUE     |
+-------------+--------------+----------+
| documents   | fileName     | TRUE     |
+-------------+--------------+----------+
|             | name         | TRUE     |
+-------------+--------------+----------+
|             | malware      | FALSE    |
+-------------+--------------+----------+
|             | password     | FALSE    |
+-------------+--------------+----------+
| emails      | name         | TRUE     |
+-------------+--------------+----------+
|             | to           | FALSE    |
+-------------+--------------+----------+
|             | from         | FALSE    |
+-------------+--------------+----------+
|             | subject      | TRUE     |
+-------------+--------------+----------+
|             | header       | TRUE     |
+-------------+--------------+----------+
|             | body         | TRUE     |
+-------------+--------------+----------+
| incidents   | name         | TRUE     |
+-------------+--------------+----------+
|             | eventDate    | TRUE     |
+-------------+--------------+----------+
| threats     | name         | TRUE     |
+-------------+--------------+----------+
| signatures  | name         | TRUE     |
+-------------+--------------+----------+
|             | fileName     | TRUE     |
+-------------+--------------+----------+
|             | fileType\*   | TRUE     |
+-------------+--------------+----------+
|             | fileText\*\* | TRUE     |
+-------------+--------------+----------+

\*The valid values for a Signature’s fileType field are: {Snort ® , Suricata, YARA, ClamAV ® , OpenIOC, CybOX™, Bro, Regex}.

\*\*A Signature’s fileText field contains the Signature itself, which must be properly escaped and encoded when submitting for creation or updating.

Documents
^^^^^^^^^

First, create a new Document given its filename

.. code::

    POST /v2/groups/documents/
    Host: api.threatconnect.com
    Content-Type: application/json
    { 
     "fileName" : "report.pdf",
     "name": "My Report"
    }

Next, receive a globally unique ID for the Document (if creation was
successful)

.. code:: json

    {                                          
      "data": 
      {
       "document":
       { 
       "id": "<DOCUMENT_ID>"
       }
      }
    }

Finally, for the given Document ID, upload the Document content in the
POST body (for instance using ``curl --data @filename``)

.. code::

    POST /v2/groups/documents/{DOCUMENT_ID}/upload
    Host: api.threatconnect.com
    Content-Type: application/octet-stream
    <raw_document>

To update the Document, use an HTTP PUT with the same Document ID - and
the new Document content in the PUT body

.. code::

    PUT /v2/groups/documents/{DOCUMENT_ID}/upload
    Host: api.threatconnect.com
    Content-Type: application/octet-stream
    <raw_document>

To upload a new Document:

-  Create a new Document Group by passing its on-disk ``filename`` and
   descriptive ``name`` to ``v2/groups/documents`` as ``json`` data
-  Receive the generated Document ID for the new Document Group from the
   server
-  Upload the raw Document content using HTTP POST given its ID to
   ``/v2/groups/documents/{DOCUMENT_ID}/upload`` as an ``octet-stream``
   (A Document may be updated using an HTTP PUT to this same endpoint)

.. note:: Any file type may be uploaded to the system, which are stored and not rendered for security considerations

Malware Documents
^^^^^^^^^^^^^^^^^

Include the ``malware`` and ``password`` fields to create a new Document
for a malicious file

.. code::

    POST /v2/groups/documents/
    Host: api.threatconnect.com
    Content-Type: application/json
    { 
     "fileName" : "malwaresample.zip",
     "name": "Malicious File",
     "malware": true,
     "password": "TCinfected"
    }

To upload a malware sample as a Document:

-  Create a `password-protected zip
   file <https://askubuntu.com/questions/17641/create-encrypted-password-protected-zip-file>`__
   on your local machine containing the sample
-  Create a new Document Group `as above <#documents>`__, including the
   additional fields ``malware`` set to True and ``password`` set to the
   zip file password
-  Upload the document `as above <#documents>`__

.. note:: Uploading raw malware executables or weaponized documents is strictly forbidden

For malware uploads, An ``HTTP 400 - Bad Request`` error will be
returned if the document is not a password-protected zip file (as
determined by file headers)

Attributes
^^^^^^^^^^

The request below adds a "Source" Attribute with the value "Proprietary
Reporting" to the "Remote Access Incident" created above:

.. code::

    POST /v2/groups/incidents/119842/attributes
    Host: api.threatconnect.com
    Content-Type: application/json
    {
    "type" : "Source",
    "value" : "Proprietary  Reporting",
    "displayed" : true
    }

Rules and mappings as defined by the Organizational Administrator:

.. code::

    HTTP/1.1 201 CREATED
    Content-Type: application/json
    {
    "status" : "Success",
    "data" : {
    "attribute" : {
    "id" : 43875,
    "type" : "Source",
    "dateAdded" : "2014-10-28T17:39:27-04:00",
    "lastModified" : "2014-10-28T17:39:27-04:00",
    "displayed" : false,
    "value" : "Proprietary  Reporting"
    }
    }
    }

Attributes can also be programmatically created via the V2 API. The path
must identify the entity to which to attach an Attribute, and the POST
body must contain the name and value of the Attribute.

Similarly to creating a Group, the API will respond with the newly
created Attribute just as if the user had queried for that Attribute.
Note that this response will contain the Attribute’s ID, which can be
useful for deleting or modifying this Attribute in the future.
Attributes must conform to the Attribute Validation.

.. note:: The Attributes can have a displayed field, which is equivalent to specifying that an Attribute should be treated as the "Default" in the GUI. This distinction is important for the Source and Description Attributes, which will be displayed at the top of an Indicator or Group screen, as well as on a Browse screen resource.

Victims
^^^^^^^

To create a Victim, simply POST a request with the Victim’s name to the
Victims Service:

.. code::

    POST /v2/victims
    Host: api.threatconnect.com
    Content-Type: application/json
    {
      "name": "Burton Guster",
      "description": "He also goes by 'Magic Head', 'Lavender Gooms', 'Ghee Buttersnaps', and 'Control Alt Delete' (among others).",
      "org": "Psych",
      "suborg": "Super Sniffer Department",
      "workLocation": "Santa Barbara, California",
      "nationality": "American"
    }

Victim Assets can also be created by POSTing a request to the appropriate service as shown below. The `12345` in the example represents the ID of an existing Victim in ThreatConnect.

.. code::

    POST /v2/victims/12345/victimAssets/emailAddresses
    Host: api.threatconnect.com
    Content-Type: application/json
    {
      "address" : "victim@demo.net",
      "addressType" : "Personal"
    }

Creating a Victim in this fashion will return a Victim object as if it
been queried for directly.

.. note:: These Asset paths and field names will be identical to those outlined in the Victims section.

Updating Entities
^^^^^^^^^^^^^^^^^

The PUT request below will update the Confidence value for a specific
Host Indicator to 80:

.. code::

    PUT /v2/indicators/hosts/baddomain.net
    Host: api.threatconnect.com
    Content-Type: application/json
    {
      "confidence" : 80
    }

The PUT request below will update the "Threat Level" Attribute
(identified by Attribute ID 54321) of an Incident to "Severe":

.. code::

    PUT /v2/groups/incidents/123456/attributes/54321
    Host: api.threatconnect.com
    Content-Type: application/json
    {
      "value" : "Severe"
    }

Just as the POST method is used to create Entities, the PUT method can
also be used to specify updates to Entities. The specification of the
Entity occurs in the actual path, while the updated fields are specified
in the body. Note that all valid fields specified in the body will
overwrite existing fields.

It is important to capture and use the ID to specify a Group or
Attribute. The field names and acceptable values are the same as those
used to create an Entity. Reference the tables above for example body
submissions for Indicators and Groups . A Document’s content can be
updated using a PUT request and the same format used during the initial
upload, as described in the Documents section.

Updating Adversary Assets
"""""""""""""""""""""""""

In ThreatConnect version 5.2, it is possible to update Adversary Assets. The general format for this request is as follows:

PUT /v2/groups/adversaries/{id}/adversaryAssets/{assetType (plural)}/{assetId}
{
  "{assetType (singular)}": "{updatedAssetValue}"
}

In this format, the possible assetTypes are ``handles``, ``phoneNumbers``, and ``urls``. The following example would update the handle with id 16 to "Mr. Yang":

PUT /v2/groups/adversaries/{id}/adversaryAssets/handles/16
{
  "handle": "Mr. Yang"
}

This request should return the following JSON response:

{
  "status": "Success",
  "data": {
    "adversaryHandle": {
      "id": 16,
      "type": "Handle",
      "webLink": "https://app.threatconnect.com/auth/adversary/adversary.xhtml?adversary=123456",
      "handle": "Mr. Yang"
    }
  }
}

Deleting Entities
^^^^^^^^^^^^^^^^^

The following example will delete the email address: falsepositive at highvolume.net:

.. code::

    DELETE /v2/indicators/emailAddresses/falsepositive@highvolume.net
    Host: api.threatconnect.com

The following example will delete the Attribute identified by ID #12345
from the Threat identified by ID #666:

.. code::

    DELETE /v2/groups/threats/666/attributes/12345
    Host: api.threatconnect.com

Entities can be deleted using the HTTP DELETE method. With proper
permissions, this allows for the programmatic removal of data from
ThreatConnect just as if it were done in the web client.

Deleting Adversary Assets
"""""""""""""""""""""""""

In ThreatConnect version 5.2, it is possible to delete Adversary Assets. The general format for this request is as follows:

DELETE /v2/groups/adversaries/{id}/adversaryAssets/{assetType (plural)}/{assetId}

In this format, the possible assetTypes are ``handles``, ``phoneNumbers``, and ``urls``. The following example would delete the Adversary Handle Asset with an id of 16:

DELETE /v2/groups/adversaries/{id}/adversaryAssets/handles/16

This request should return the following JSON response:

{
  "status": "Success"
}

Creating Associations
^^^^^^^^^^^^^^^^^^^^^

In order to see all IP Addresses associated with an Incident, issue the
following query:

.. code::

    GET /v2/groups/incidents/119842/indicators/addresses

To add an Association between the above Incident and unassociated IP
Address 10.0.2.5, the following POST request could be issued:

.. code::

    POST /v2/groups/incidents/119842/indicators/addresses/10.0.2.5

In keeping with the bidirectional nature of Associations and pivoting,
the Association can be created by pivoting off the Address:

.. code::

    POST /v2/indicators/addresses/10.0.2.5/groups/incidents/119842

This Association mechanic can also be used to add Tags to a Group or an
Indicator, again in either direction:

.. code::

    POST /v2/groups/incidents/119842/tags/China
    POST /v2/tags/China/groups/incidents/119842

This Association mechanic can also be used to set Security Labels to a
Group or an Indicator, again in either direction:

.. code::

    POST /v2/groups/incidents/119842/securityLabels/Sensitive
    POST /v2/securityLabels/sensitive/groups/incidents/119842

Associations can be created via a POST command by structuring the path
in a manner similar to the pivoting detailed above. Associations do not
need a body to be sent along, as the path conveys all the information
necessary.

A query would return a list of Addresses in the same format as the
``/v2/indicators/addresses`` query. The distinction is that the query
above will only return a list of Addresses that are associated to the
specified Incident. This same pivoting syntax is used to create an
Association.

.. note:: This will not create the Address in the system if the Address does not exist; this call only serves to associate the two.

Deleting Associations
^^^^^^^^^^^^^^^^^^^^^

In the example below, the Association between a Threat and an email
address can be removed if it is no longer relevant:

.. code::

    DELETE /v2/groups/threats/666/indicators/emailAddresses/oldhat@irrelevant.net

To remove a Tag that is no longer applicable:

.. code::

    DELETE /v2/indicators/emailAddresses/oldhat@irrelevant.net/tags/APT

With the understanding of how Associations are created, Association
deletion becomes trivial. Using the HTTP DELETE command, a specified
Association can be deleted.

Batch Upload: Indicators
^^^^^^^^^^^^^^^^^^^^^^^^

Sample Batch Create request

.. code::

     POST /v2/batch/                 
     {                               
     "haltOnError": "false",         
     "attributeWriteType": "Replace", 
     "action": "Create",             
     "owner": "Common Community"     
     }                               

Server Response on Success

.. code::

     HTTP/1.1 201 Created                       
     {                                          
     batchId: "123"                             
     }                                          

Server Response on Insufficient Privileges

.. code::

     HTTP/1.1 403 Forbidden                     
     {                                          
     status: "Not Authorized",                  
     description: "Organization not authorized  
     for batch"                                 
     }                                          

Server Response on Incorrect Settings

.. code::

     HTTP/1.1 403 Forbidden                     
     {                                          
     status: "Not Authorized",                  
     description: "Document storage not enabled 
     for this instance"                         
     }                                          

The following is an example of a Batch Indicator Input file:

.. code:: json

    {
      
      "ownerName": "<String>", 
      "type": "<String>",
      "rating": "<BigDecimal>",
      "confidence": "<Short>",
      "description": "<String>",
      "summary": "<String>",
      
      "tag": [
        {
          "name": "<String>"
        }
            ]
    }

Sample Batch Upload Input File request

.. code::

     POST /v2/batch/123                                               
                                                                      
     Content-Type: application/octet-stream; boundary=[boundary-text] 
     Content-Length: <data_size>                                         
     Content-Encoding: gzip       
     [boundary-text]                                                  
     <uploaded_data>                                              

Server Response on Success

.. code::

     HTTP/1.1 202 Accepted                
     {                                    
     status: "Queued"    
     }                                    

Server Response on Overlarge Input File

.. code::

     HTTP/1.1 400 Bad Request             
     {                                    
     status: "Invalid",                   
     description: "File size greater than 
     allowable limit of 2000000"          
     }                                    

Sample Batch Status Check request

.. code::

    GET /v2/batch/123


Server Response on Success (job still running)

.. code::

    HTTP/1.1 200 OK
    {
    status: "Running",
    }

Server Response on Success (job finished)

.. code::

    HTTP/1.1 200 OK
    {
    status: "Completed",
    errorCount: 3420,
    successCount: 405432
    unprocessCount: 0
    }

Sample Batch Error Message request

.. code::

    GET /v2/batch/123/errors

Server Response on Success (job still running)

.. code::

    HTTP/1.1 400 Bad Request
    {
    status: "Invalid",
    description: "Batch still in Running state" }

Server Response on Success (job finished):

.. code::

    HTTP/1.1 200 OK
    Content-Type: application/octet-stream ; boundary=
    Content-Length: 
    Content-Encoding: gzip

Create Batch Endpoint

The Batch API allows bulk Indicator creation and deletion via the HTTP
POST method. After creating a batch, an Indicator file is uploaded. The
content of the file must be valid JSON, with content and format
mimicking the data structure of the Bulk JSON file download. A file
upload instantly triggers a batch job to begin processing the data. The
Batch API is restricted to Indicators and will improve performance when
importing large amounts of data.

.. note:: Document Storage is required to use the Batch API.

The Batch Create resource creates a batch entry in the system. No batch processing is triggered until the batch input file is uploaded. The table below displays the fields required for the Batch Create message.

+---------------------+-----------------+-------------------------------------------------------------------------------------------------------------------+
| BatchConfig Message | Values          | Description                                                                                                       |
+=====================+=================+===================================================================================================================+
| haltOnError         | true            | The batch process will stop processing the entire batch the first time it reaches an error during processing.     |
+---------------------+-----------------+-------------------------------------------------------------------------------------------------------------------+
|                     | false (default) | If this field is not provided, the default behavior is to continue processing further entities in the input file. |
+---------------------+-----------------+-------------------------------------------------------------------------------------------------------------------+
| attributeWriteType  | Append          | Append: Add attributes (allow duplicates)                                                                         |
+---------------------+-----------------+-------------------------------------------------------------------------------------------------------------------+
|                     | Replace         | Replace: Delete current attributes; Add/Validate new                                                              |
+---------------------+-----------------+-------------------------------------------------------------------------------------------------------------------+
| action              | Create          | Create: Create Indicator                                                                                          |
+---------------------+-----------------+-------------------------------------------------------------------------------------------------------------------+
|                     | Delete          | Delete: Delete Indicator (only the ‘summary’ and ‘type’ field are required)                                       |
+---------------------+-----------------+-------------------------------------------------------------------------------------------------------------------+

Batch Indicator Input File Format
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: json

    [
      {
            "rating": 3,
            "confidence": 60,
            "description": "a malicious domain",
            "summary": "super-malicious.ru",
            "type": "Host", 
            "associatedGroup": [12345, 54321],
            "attribute": [
                {
                    "type": "AttributeName",
                    "value": "MyAttribute"
                }
                ],
            "tag": [
             {
               "name": "MyTag"
             }
            ]
      }
    ]

The batch upload feature expects to ingest a JSON file consisting of a
list of dictionaries

+---------------------+----------------------+-----------+
| Field               | Data type            | Required? |
+=====================+======================+===========+
| ``rating``          | integer              | Required  |
+---------------------+----------------------+-----------+
| ``confidence``      | float                | Required  |
+---------------------+----------------------+-----------+
| ``description``     | string               | Required  |
+---------------------+----------------------+-----------+
| ``summary``         | string               | Required  |
+---------------------+----------------------+-----------+
| ``type``            | string               | Required  |
+---------------------+----------------------+-----------+
| ``tag``             | list of dictionaries | Optional  |
+---------------------+----------------------+-----------+
| ``attribute``       | list of dictionaries | Optional  |
+---------------------+----------------------+-----------+
| ``associatedGroup`` | list of integers     | Optional  |
+---------------------+----------------------+-----------+

Supported ``type`` values for Indicators:

-  Host
-  Address
-  EmailAddress
-  URL
-  File

.. note:: Exporting indicators via the ``JSON Export`` feature in ThreatConnect will create a file in this format

Upload Batch Input File Endpoint

Batch files should be sent as HTTP POST data to a REST endpoint,
including the relevant ``batchId``

Check Batch Status Endpoint

You may also check the status of a running batch upload job

The server can be configured to restrict the file size. Clients can
submit multiple batches for larger files.

Possible GET response status includes:

-  Created
-  Queued
-  Running
-  Completed

If ``haltOnError`` is set to ‘true’ and an error occurs, then the status
will be set to ‘Completed’, and ‘errorCount’ will be greater than zero.
The ‘unprocessedCount’ field will be greater than zero, unless the
uploaded file did not contain valid JSON.

Partial failures will have an error file with a response having a
‘reason text’, which includes Tag, Attribute, or Indicator errors (fail
on first).

Publish Endpoint
~~~~~~~~~~~~~~~~

As of ThreatConnect version 5.2, it is possible to publish intelligence for a specific Group. The general format for this request is as follows:

POST v2/groups/{groupType}/{id}/publish
{
  "sourceLabelIds": [],
  "excludeUnlabeled": false
}

The ``sourceLabelIds`` key of the request body allows you to provide the name(s) of the Security Label(s) that, if an item has this label, you would like to exclude when publishing. The following example request body would *not* publish any items (Groups or Indicators) that have the ``TLP Green`` or ``TLP Amber`` Labels:

{
  "sourceLabelIds": [
    "TLP Green",
    "TLP Amber"
  ],
  "excludeUnlabeled": false
}

The ``excludeUnlabeled`` key gives you the option to exclude all items that do not have a Security Label. The following example request body would *not* publish any items that have the ``TLP Green`` or ``TLP Amber`` Labels or any items that do not have a Security Label:

{
  "sourceLabelIds": [
    "TLP Green",
    "TLP Amber"
  ],
  "excludeUnlabeled": true
}

The JSON response to any of these queries, assuming the query is successful, is as follows:

{
  "status": "Success"
}

Responses
~~~~~~~~~

The API will return appropriate HTTP response codes with a description
in the message field as detailed in the table below. This can be helpful when
troubleshooting queries.

**HTTP Response Codes**

+----------------+----------------------------------------------------------+
| HTTP Response  | Explanation                                              |
| Code           |                                                          |
+================+==========================================================+
| 200 - Success  | Successful execution of a request.                       |
+----------------+----------------------------------------------------------+
| 201 - Created  | The query successfully created the specified entity.     |
+----------------+----------------------------------------------------------+
| 400 - Bad      | Status returned if the request was not properly          |
| Request        | formatted. The message included with the response will   |
|                | include details.                                         |
+----------------+----------------------------------------------------------+
| 401 -          | Returned if a user does not have access to the specified |
| Unauthorized   | resource or the method attempted on a resource.          |
+----------------+----------------------------------------------------------+
| 403 -          | Returned when specifying an Owner to which the user does |
| Forbidden      | do not have access, or does not exist.                   |
+----------------+----------------------------------------------------------+
| 403 - Bad      | This Indicator is included in a system-wide exclusion    |
| Request        | list.                                                    |
+----------------+----------------------------------------------------------+
| 404 - Not      | The service or resource specified in the path does not   |
| Found          | exist.                                                   |
+----------------+----------------------------------------------------------+
| 500 - Internal | An unknown internal error                                |
| Server Error   |                                                          |
+----------------+----------------------------------------------------------+
| 503 - Service  | The Instance of ThreatConnect is not licensed to enable  |
| Unavailable    | the API.                                                 |
+----------------+----------------------------------------------------------+

Putting Everything Together
~~~~~~~~~~~~~~~~~~~~~~~~~~~

With the information thus far included in this document, users are ready
to start issuing queries to the ThreatConnect API. This section contains
some examples of cases that will help users define queries to fulfill
their Organizations’ needs.

Retrieving All IP Addresses with a Certain Tag
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Using paginated queries, a user can continue to pull the remaining IP
Addresses, if they number more than the default page size:

.. code::

    /v2/tags/{TAGNAME}/indicators/addresses

The query to the right will retrieve the first page IP Addresses within
a user’s Organization that are tagged with the specified value. Note
that other Indicator types, such as files or URLs, can be viewed .

Retrieving All Signatures from a Specific File
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

A user can also take the Signature IDs from the results and issue
further queries to download the Signatures themselves, as detailed in
the Signatures section:

.. code::

    /v2/indicators/files/{FILE_HASH}/groups/signatures

The query to the right will return the first page of Signatures for the
file specified by FILE\_HASH . Note that an Owner can be specified for
this file, which may exist in multiple Instances with different
Signatures across multiple Communities.

Retrieving All Incidents from a Community
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Using paginated queries, a user can continue to pull the remaining
Incidents, if they number more than the default page size:

.. code::

    /v2/groups/incidents?owner=Common%20Community

The query to the right will retrieve the first page of Incidents
belonging to the Common Community. The specified Community can be
replaced with any Community to which the API User has access (as
determined by the Owners Service ).

Exploring an Incident’s Indicators of Interest
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This will return a summary of all Indicators associated to a specified
Incident:

.. code::

    /v2/groups/incidents/{INCIDENT_ID}/indicators

This will return the Incident's associated file Indicators:

.. code::

    /v2/groups/incidents/{INCIDENT_ID}/indicators/files

This will return the Incident's associated address Indicators:

.. code::

    /v2/groups/incidents/{INCIDENT_ID}/indicators/addresses

A script can parse out the details returned by the respective services
to identify new and dangerous Indicators and then format them to provide
real-time updates to firewalls, block lists, and other network security
tools:

The first query to the right will return a summary of all Indicators
associated with the Incident identified by the given INCIDENT\_ID. This
INCIDENT\_ID could have been identified in the previous query and
programmatically fed to additional queries. Note that an Owner’s
identifier does not need to be supplied at this point, since Incidents’
identifiers are unique to Owners. The second and third queries to the
right will return the Incident’s associated file and Address Indicators,
respectively. These queries can be combined to poll ThreatConnect for
new and dangerous IPs.

Creating an Incident with Indicators
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Note that the first query will return the body of the newly created
Incident whose ID must be captured to specify later in the third query
to produce the Association:

.. code::

    POST /v2/groups/incidents
    {
    "name" : "Bad November Incident",
    "eventDate" : "2014-11-04T12:40:53-05:00"
    }


    POST /v2/indicators/addresses
    {
    "ip" : "192.168.0.1",
    "rating" : "5.0",
    "confidence" : 100
    }

    POST /v2/groups/incidents/{NEW_INCIDENT_ID}/indicators/addresses/192.168.0.1

The queries below will create an Incident named "Bad November Incident,"
IP Address Indicator 192.168.0.1, and then associate them.

Tracking a "Times Seen" Attribute
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Creates IP Address Indicator

.. code::

     POST /v2/indicators/addresses                            
     {                                                        
     ip : 192.168.0.1,                                    
     rating : 5.0,                                        
     confidence : 100                                       
     }                                                        

Adds the tag "Tracked" to the above IP Address

.. code::

     POST /v2/indicators/addresses/192.168.0.1/tags/Tracked   

Create the "Times Seen" Attribute on the above IP Address. Note that
this Attribute Type must be created by an Organization Administrator
(via the ThreatConnect web GUI).

.. code::

     POST /v2/indicators/addresses/192.168.0.1/attributes     
     {                                                        
     type : Times Seen,                                   
     value : 0                                            
     }                                                        

Get all attributes attached to an IP Address

.. code::

     GET /v2/indicators/addresses/192.168.0.1/attributes      

Increment the "Times Seen" Attribute by one

.. code::

     PUT /v2/indicators/addresses/192.168.0.1/attributes/1234 
     {                                                        
     value : 1                                            
     }                                                        

Remove the "Tracked" Tag from the specified IP Address

.. code::

     DELETE /v2/indicators/addresses/192.168.0.1/tags/Tracked 

If a user creates an Attribute Type to track how often an Indicator is
seen within a network, then those queries are helpful, since they will
create an Indicator, create and update the Attribute, and add or remove
Tags. Please note that some of these features will require additional
processing by an API client program or integration.

An integration may want to update the "Times Seen" Attribute (such as a
sensor or SIEM) when it encounters the Indicator. The first query will
return all Attributes attached to the specified IP Address. An
integration must iterate over all of these Attributes to identify the
Integer Attribute ID it wishes to change (in this example, 1234). This
is also an opportune time to capture the existing value for the "Times
Seen" Attribute, so the user knows what to submit when incrementing it.

Removing a tag from an indicator may be useful if it is no longer
considered relevant based on a computation of its "Times Seen" Attribute
and its creation date (or "last-seen" date, if that was also tracked as
an Attribute).
